{
  "hash": "678c5ea62f792fbd8a61ceb959fa9e0f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\njupyter: python3\n---\n\n\n\n\n<h1>6. Seaborn</h1>\n\n## 6.1. Seaborn\n+ Seaborn\n  + Matplotlib 라이브러리를 기반으로 개발된 고급 통계 데이터 시각화 라이브러리\n  + 다양한 테마와 통계 그래프를 지원하며, 시각적으로 세련된 그래프를 쉽게 생성할 수 있음\n  + Matplotlib 라이브러리에 의존하므로, 사용 시 함께 불러와야 함\n\n<br>\n\n|주요 특징|시각화 단계|\n|:---------------|:---------------|\n|- 뛰어난 시각화 효과 <br>- 간결한 구문 제공 <br>- Pandas 데이터프레임에 최적화 <br>- 쉬운 데이터프레임 집계 및 그래프 요약|- 데이터 준비 <br>- 배경 설정 <br>- 시각화 <br>- 개별 그래프 상세 설정|\n\n<br>\n\n<br>\n\n+ \\[데이터\\] 공공데이터포털에서 제공하는 2020년 국민건강보험공단 건강검진 정보\n  + gender, height, weight, waist, smoking, drinking 등 18개 변수\n  + \\[실습파일\\] [05_data1.csv](./data/05_data1.csv)\n\n<br>\n\n## 6.2. 막대 그래프\n\n<br>\n\n::: {#9aa84450 .cell execution_count=1}\n``` {.python .cell-code}\n# Seaborn 라이브러리 설치\n#!pip install seaborn\n```\n:::\n\n\n::: {#0006ce15 .cell execution_count=2}\n``` {.python .cell-code}\n# Seaborn 라이브러리 불러오기\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n:::\n\n\n::: {#85518e11 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n```\n:::\n\n\n::: {#6073838b .cell execution_count=4}\n``` {.python .cell-code}\n# 데이터 불러오기\ndata = pd.read_csv('./data/05_data1.csv')\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>no</th>\n      <th>city_code</th>\n      <th>gender</th>\n      <th>age_code</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>waist</th>\n      <th>systolic</th>\n      <th>diastolic</th>\n      <th>blood_sugar</th>\n      <th>cholesterol</th>\n      <th>triglycerides</th>\n      <th>HDL</th>\n      <th>LDL</th>\n      <th>hemoglobin</th>\n      <th>serum</th>\n      <th>smoking</th>\n      <th>drinking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>36</td>\n      <td>1</td>\n      <td>9</td>\n      <td>165</td>\n      <td>60</td>\n      <td>72.1</td>\n      <td>127</td>\n      <td>79</td>\n      <td>90</td>\n      <td>188</td>\n      <td>58</td>\n      <td>58.0</td>\n      <td>118</td>\n      <td>15.0</td>\n      <td>1.1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>41</td>\n      <td>2</td>\n      <td>12</td>\n      <td>155</td>\n      <td>50</td>\n      <td>75.2</td>\n      <td>144</td>\n      <td>89</td>\n      <td>110</td>\n      <td>220</td>\n      <td>171</td>\n      <td>53.0</td>\n      <td>133</td>\n      <td>12.4</td>\n      <td>0.7</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6</td>\n      <td>27</td>\n      <td>1</td>\n      <td>9</td>\n      <td>185</td>\n      <td>85</td>\n      <td>94.0</td>\n      <td>114</td>\n      <td>72</td>\n      <td>86</td>\n      <td>234</td>\n      <td>183</td>\n      <td>50.0</td>\n      <td>147</td>\n      <td>16.4</td>\n      <td>1.1</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7</td>\n      <td>44</td>\n      <td>1</td>\n      <td>9</td>\n      <td>165</td>\n      <td>80</td>\n      <td>93.0</td>\n      <td>112</td>\n      <td>73</td>\n      <td>250</td>\n      <td>119</td>\n      <td>265</td>\n      <td>26.0</td>\n      <td>40</td>\n      <td>15.7</td>\n      <td>0.7</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9</td>\n      <td>41</td>\n      <td>2</td>\n      <td>17</td>\n      <td>150</td>\n      <td>50</td>\n      <td>82.0</td>\n      <td>136</td>\n      <td>65</td>\n      <td>104</td>\n      <td>177</td>\n      <td>61</td>\n      <td>63.0</td>\n      <td>101</td>\n      <td>13.3</td>\n      <td>0.7</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#3116f468 .cell execution_count=5}\n``` {.python .cell-code}\n# 데이터 전처리 : 라벨 매핑(label mapping)\n# replace() 함수는 명시되지 않은 값을 그대로 유지하지만,\n# map() 함수는 명시되지 않은 값을 NaN으로 처리함\ndata6 = data.copy()\ndata6 = data6.loc[:, ['gender', 'height', 'weight', 'waist', 'drinking', 'smoking']]\ndata6['gender'] = data['gender'].replace({1: 'M', 2: 'F'})\ndata6['drinking'] = data['drinking'].replace({0: 'Non-drinking', 1: 'Drinking'})\ndata6['smoking'] = data['smoking'].replace({1: 'Non-smoking', 2: 'Quit-smoking', 3: 'Smoking'})\ndata6.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>waist</th>\n      <th>drinking</th>\n      <th>smoking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M</td>\n      <td>165</td>\n      <td>60</td>\n      <td>72.1</td>\n      <td>Non-drinking</td>\n      <td>Non-smoking</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>F</td>\n      <td>155</td>\n      <td>50</td>\n      <td>75.2</td>\n      <td>Non-drinking</td>\n      <td>Non-smoking</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M</td>\n      <td>185</td>\n      <td>85</td>\n      <td>94.0</td>\n      <td>Drinking</td>\n      <td>Smoking</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>165</td>\n      <td>80</td>\n      <td>93.0</td>\n      <td>Drinking</td>\n      <td>Smoking</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>F</td>\n      <td>150</td>\n      <td>50</td>\n      <td>82.0</td>\n      <td>Non-drinking</td>\n      <td>Non-smoking</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#927c37e3 .cell execution_count=6}\n``` {.python .cell-code}\n# 데이터 집계 :성별 음주 여부별 빈도\ndrinking = data6.groupby(['gender', 'drinking'])['drinking'].count()\ndrinking = drinking.to_frame(name='count')\ndrinking = drinking.reset_index()\ndrinking\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>drinking</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>F</td>\n      <td>Drinking</td>\n      <td>611</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>F</td>\n      <td>Non-drinking</td>\n      <td>888</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M</td>\n      <td>Drinking</td>\n      <td>1086</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>Non-drinking</td>\n      <td>415</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#a5cbce12 .cell execution_count=7}\n``` {.python .cell-code}\n# 데이터 집계 :성별 흡연 상태별 빈도\nsmoking = data6.groupby(['gender', 'smoking'])['smoking'].count()\nsmoking = smoking.to_frame(name='count')\nsmoking = smoking.reset_index()\nsmoking\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>smoking</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>F</td>\n      <td>Non-smoking</td>\n      <td>1422</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>F</td>\n      <td>Quit-smoking</td>\n      <td>45</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>F</td>\n      <td>Smoking</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>Non-smoking</td>\n      <td>502</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M</td>\n      <td>Quit-smoking</td>\n      <td>519</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>M</td>\n      <td>Smoking</td>\n      <td>480</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#3d657d98 .cell execution_count=8}\n``` {.python .cell-code}\n# 막대 그래프 : 성별에 따른 음주 여부, 흡연 상태 분포\nfig = plt.figure(figsize=(8, 4))\narea1 = fig.add_subplot(1, 2, 1)\narea2 = fig.add_subplot(1, 2, 2)\n\nax1 = sns.barplot(x='gender', y='count', hue='drinking', data=drinking, ax=area1)\nax2 = sns.barplot(x='gender', y='count', hue='smoking', data=smoking, ax=area2)\n\nfig.suptitle('2020 Health Check Drinking & Smoking Type by Gender', fontweight='bold')\narea1.set_title('Drinking Type')\narea2.set_title('Smoking Type')\nplt.tight_layout(rect=[0, 0, 1, 0.99])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-9-output-1.png){width=757 height=379}\n:::\n:::\n\n\n::: {#77951c47 .cell execution_count=9}\n``` {.python .cell-code}\n# 데이터 집계 :성별 흡연 상태별 평균 몸무게\nmean_weight = data6.groupby(['gender', 'smoking'])['weight'].mean()\nmean_weight = mean_weight.to_frame(name='mean')\nmean_weight = mean_weight.reset_index()\nmean_weight\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>smoking</th>\n      <th>mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>F</td>\n      <td>Non-smoking</td>\n      <td>55.706751</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>F</td>\n      <td>Quit-smoking</td>\n      <td>55.555556</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>F</td>\n      <td>Smoking</td>\n      <td>59.843750</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>Non-smoking</td>\n      <td>68.914343</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M</td>\n      <td>Quit-smoking</td>\n      <td>70.337187</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>M</td>\n      <td>Smoking</td>\n      <td>69.052083</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#c26c5129 .cell execution_count=10}\n``` {.python .cell-code}\n# 막대 그래프 : 성별과 흡연 상태에 따른 평균 몸무게\nplt.figure(figsize=(5, 3))\nsns.barplot(x='gender', y='mean', hue='smoking', data=mean_weight)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-11-output-1.png){width=436 height=282}\n:::\n:::\n\n\n<br>\n\n## 6.3. 히스토그램\n\n<br>\n\n::: {#9a084eb7 .cell execution_count=11}\n``` {.python .cell-code}\n# 데이터 전처리 : 성별에 따라 데이터 분리\nmaledata = data6.copy()\nmaledata = maledata.loc[maledata['gender']=='M',:]\n\nfemaledata = data6.copy()\nfemaledata = femaledata.loc[femaledata['gender']=='F',:]\n```\n:::\n\n\n::: {#21b06625 .cell execution_count=12}\n``` {.python .cell-code}\n# 히스토그램 : 성별에 따른 몸무게 분포\nplt.figure(figsize=(5, 3))\nplt.title('Distribution of Weight')\nsns.histplot(maledata['weight'], bins=8, alpha=0.5, label='Male')\nsns.histplot(femaledata['weight'], bins=8, alpha=0.5, label='Female', color='r')\nplt.xlim(20, 130)\nplt.xlabel('weight')\nplt.ylabel('count')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-13-output-1.png){width=444 height=302}\n:::\n:::\n\n\n::: {#8967846d .cell execution_count=13}\n``` {.python .cell-code}\n# 히스토그램 & 커널 밀도 추정(KDE) : 성별에 따른 허리둘레 분포\nplt.figure(figsize=(5, 3))\nplt.title('Distribution of Waist with KDE')\nsns.histplot(maledata['waist'], bins=7, alpha=0.5, label='Male', kde=True)\nsns.histplot(femaledata['waist'], bins=7, alpha=0.5, label='Female', color='r', kde=True)\nplt.xlim(40,130)\nplt.xlabel('waist')\nplt.ylabel('count')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-14-output-1.png){width=457 height=302}\n:::\n:::\n\n\n<br>\n\n## 6.4. 상자수염 그래프\n\n<br>\n\n::: {#67596979 .cell execution_count=14}\n``` {.python .cell-code}\n# 상자수염 그래프 : 성별 및 음주 여부에 따른 몸무게 분포\nplt.figure(figsize=(8, 4))\nplt.title('Weight By Gender and Drinking')\nsns.boxplot(x='gender', y='weight', hue='drinking', width=0.7, gap = 0.1, data=data6)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-15-output-1.png){width=668 height=376}\n:::\n:::\n\n\n::: {#fcce2e58 .cell execution_count=15}\n``` {.python .cell-code}\n# 상자수염 그래프 : 성별 및 흡연 상태에 따른 몸무게 분포\nplt.figure(figsize=(8, 6))\nplt.title('Weight By Gender and Smoking')\nsns.boxplot(x='weight', y='gender', hue='smoking', width=0.7, gap=0.1, data=data6, orient='h')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-16-output-1.png){width=654 height=523}\n:::\n:::\n\n\n## 6.5. 카운트 플롯(count plot)\n- 범주형 변수의 각 항목별 빈도를 막대 그래프로 표현함\n- 데이터의 범주별 분포를 직관적으로 파악할 수 있음\n\n<br>\n\n::: {#7334c2cd .cell execution_count=16}\n``` {.python .cell-code}\n# 카운트 플롯1 : 음주 여부에 따른 성별 분포\nplt.figure(figsize=(5, 3))\nplt.title('Gender and Drinking')\nsns.countplot(x='drinking', hue='gender', data=data6)\nplt.xlabel('')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-17-output-1.png){width=453 height=283}\n:::\n:::\n\n\n::: {#f1c1e062 .cell execution_count=17}\n``` {.python .cell-code}\n# 카운트 플롯2 : 흡연 상태에 따른 성별 분포\nplt.figure(figsize=(5, 3))\nplt.title('Gender and Smoking')\nsns.countplot(y='smoking', hue='gender',\n              data=data6, order=['Smoking', 'Quit-smoking', 'Non-smoking'])\nplt.ylabel('')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-18-output-1.png){width=490 height=302}\n:::\n:::\n\n\n## 6.5. 히트맵(heatmap)\n- 행과 열로 이루어진 2차원 행렬 데이터를 색상으로 시각화함\n- 두 범주형 변수 간의 관계나 상관관계를 나타낼 때 사용\n- 색상의 강도를 통해 값의 크기를 비교할 수 있음\n- 예 : 상관행렬, 교차표 등\n\n<br>\n\n::: {#08070530 .cell execution_count=18}\n``` {.python .cell-code}\n# 데이터 전처리 : 8개 건강 지표 선택\ndata8 = data.copy()\ndata8 = data8.loc[:, ['height', 'weight', 'waist',\n                      'systolic', 'diastolic', 'cholesterol', 'HDL', 'LDL']]\n```\n:::\n\n\n::: {#689c0611 .cell execution_count=19}\n``` {.python .cell-code}\n# 히트맵 : 8개의 건강 지표 간 상관관계\n# 상관계수는 -1에서 +1 사이의 값을 가지므로,\n# vmin=-1, vmax=1 옵션 설정으로 색상 범위의 균형을 맞춤\ncorrelation_data8 = data8.corr()\nupp_mat = np.triu(correlation_data8)\n\nplt.figure(figsize=(8, 6))\nplt.title('Correlation Heatmap')\nsns.heatmap(correlation_data8, annot=True, mask=upp_mat, cmap='seismic', vmin=-1, vmax=1)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-20-output-1.png){width=680 height=553}\n:::\n:::\n\n\n<br>\n\n## 6.7. 기타 시각화\n\n|시각화 유형|설명|\n|:------:|:------------------------|\n|스트립 플롯 <br>(strip plot)|- 데이터 분포를 요약하여 간략히 띠 형태로 시각화함 <br>- 일반적으로 x축에는 범주형 변수, y축에는 수치형 변수를 지정함 <br>- 주로 데이터 수가 적을 때 사용됨|\n|스웜 플롯 <br>(swarm plot)|- 스트립 플롯과 유사하지만, 점들을 겹치지 않도록 자동으로 위치를 조정함 <br>- 분포를 보여줄 때 효과적이나, 데이터 수가 많을 때에는 개수를 대략적으로 파악하기 어려움|\n|바이올린 플롯 <br>(violin plot)|- 커널 밀도 추정(KDE)을 이용하여 데이터의 분포를 시각화함 <br>- 상자수염 그래프와 KDE를 결합한 형태로 중앙값, 사분위수, 전체 분포를 동시에 보여줌 <br>- 분포를 비교하는 데 효과적이나, 데이터 수가 적을 경우 왜곡된 해석 가능성 있음|\n\n<br>\n\n::: {#8c1f5df7 .cell execution_count=20}\n``` {.python .cell-code}\n# 스트립 플롯 : 키와 몸무게, 성별의 관계\nplt.figure(figsize=(8, 4))\nplt.title('Height vs Weight by Gender - Strip Plot')\nsns.stripplot(x='height', y='weight', hue='gender', alpha=0.5, palette='dark', data=femaledata)\nsns.stripplot(x='height', y='weight', hue='gender', alpha=0.5, palette='Set1', data=maledata)\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-21-output-1.png){width=668 height=376}\n:::\n:::\n\n\n::: {#aca387f4 .cell execution_count=21}\n``` {.python .cell-code}\n# 데이터 전처리 : 남성, 여성 각각 100개 데이터 선택\nmaledata100 = maledata.head(100)\nfemaledata100 = femaledata.head(100)\n```\n:::\n\n\n::: {#1222d4c6 .cell execution_count=22}\n``` {.python .cell-code}\n# 스웜 플롯 : 키와 몸무게, 성별의 관계\nplt.figure(figsize=(8, 4))\nplt.title('Height vs Weight by Gender - Swarm Plot')\nsns.stripplot(x='height', y='weight', hue='gender', alpha=0.5, palette='dark', data=femaledata100)\nsns.stripplot(x='height', y='weight', hue='gender', alpha=0.5, palette='Set1', data=maledata100)\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-23-output-1.png){width=659 height=376}\n:::\n:::\n\n\n::: {#c5c46df6 .cell execution_count=23}\n``` {.python .cell-code}\n# 바이올린 플롯1 : 성별 및 음주 여부별 몸무게(120 미만) 분포\nplt.figure(figsize=(5, 3))\nplt.title('Weight By Gender and Drinking (Under 120kg)')\nsns.violinplot(x='gender', y='weight', hue='drinking', gap=0.1, data=data6[data6.weight<120])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-24-output-1.png){width=445 height=302}\n:::\n:::\n\n\n::: {#474344f1 .cell execution_count=24}\n``` {.python .cell-code}\n# 바이올린 플롯2 : 성별 및 음주 여부별 허리둘레(150 미만) 분포\nplt.figure(figsize=(5, 5))\nplt.title('Waist By Gender and Drinking (Under 150cm)')\nsns.violinplot(y='gender', x='waist', hue='drinking', gap=0.1, data=data6[data6.waist<150])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_4_seaborn_files/figure-html/cell-25-output-1.png){width=430 height=449}\n:::\n:::\n\n\n",
    "supporting": [
      "2_4_seaborn_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}