{
  "hash": "0910a3ad594a6621f9d37652d7e03847",
  "result": {
    "engine": "jupyter",
    "markdown": "---\njupyter: python3\n---\n\n\n\n\n<h1>5. Matplotlib</h1>\n\n## 5.1. 데이터 시각화\n+ 데이터 시각화(data visualization)\n  + 데이터 분석 결과를 쉽게 이해할 수 있도록 표현하고 전달되는 과정\n  + 복잡한 정보를 한 눈에 파악하고, 숨겨진 패턴이나 관계를 드러냄\n  + 탐색적 자료 분석(EDA), 결과 해석, 의사결정 등에 폭넓게 활용\n\n<br>\n\n+ 데이터 시각화 단계\n  1. 시각화 라이브러리 불러오기\n  2. x축, y축에 표시할 데이터 정하기\n  3. `plot()` 함수에 데이터 입력하기\n  4. 그래프 보여주기\n\n<br>\n\n## 5.2. 시각화 옵션\n+ Matplotlib\n  + 넘파이 배열을 기반으로 개발된 다중 플랫폼 데이터 시각화 라이브러리\n  + 다양한 운영체제와 그래픽 백엔드에서 안정적으로 작동함\n  + 일반적으로 Pandas의 데이터프레임과 함께 자주 사용됨\n\n<br>\n\n::: {#d42ca7cf .cell execution_count=1}\n``` {.python .cell-code}\n# Matplotlib 라이브러리 설치\n#!pip install matplotlib\n```\n:::\n\n\n::: {#c1793002 .cell execution_count=2}\n``` {.python .cell-code}\n# Matplotlib 라이브러리의 pylot 모듈 불러오기\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n::: {#7468de1f .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n```\n:::\n\n\n::: {#6c45985b .cell execution_count=4}\n``` {.python .cell-code}\n# 시각화 옵션1 : 제목\nxdata = [3, 5, 7, 9]\nydata = [2, 4, 6, 8]\n\nplt.figure(figsize=(5, 3))\nplt.title('Line Graph')\nplt.plot(xdata, ydata)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-5-output-1.png){width=409 height=283}\n:::\n:::\n\n\n::: {#b58dae89 .cell execution_count=5}\n``` {.python .cell-code}\n# 시각화 옵션2 : 범례\n# plot()의 label 속성에 범례에 표시할 문자열을 작성\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\n\nplt.figure(figsize=(5, 3))\nplt.title('Legend Properties')\nplt.plot(data1, label='Salary')\nplt.plot(data2, label='Prices')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-6-output-1.png){width=409 height=283}\n:::\n:::\n\n\n::: {#69de83e5 .cell execution_count=6}\n``` {.python .cell-code}\n# 시각화 옵션3 : 색상\n# plot()의 color 속성에 색상 설정\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\n\nplt.figure(figsize=(5, 3))\nplt.title('Color Properties')\nplt.plot(xdata, ydata, color='green')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-7-output-1.png){width=409 height=283}\n:::\n:::\n\n\n::: {#5d76c6de .cell execution_count=7}\n``` {.python .cell-code}\n# 시각화 옵션4 : x축 및 y축 이름\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\n\nplt.figure(figsize=(5, 3))\nplt.title('Axis name Properties')\nplt.plot(xdata, ydata)\nplt.xlabel('X value')\nplt.ylabel('Y value')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-8-output-1.png){width=427 height=302}\n:::\n:::\n\n\n::: {#d000dec0 .cell execution_count=8}\n``` {.python .cell-code}\n# 시각화 옵션5 : 그래프 선 모양\n# plot()의 linestyle 속성에 선 모양을 '-', '--', '-.', ':' 등으로 설정\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\n\nplt.figure(figsize=(5, 3))\nplt.title('Line shape Properties')\nplt.plot(data1, color='b', linestyle='--', label='dashed')\nplt.plot(data2, 'r:', label='dotted')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-9-output-1.png){width=409 height=283}\n:::\n:::\n\n\n::: {#3d951f08 .cell execution_count=9}\n``` {.python .cell-code}\n# 시각화 옵션6 : 그림 범위 지정\nxdata = [15, 25, 35, 45]\nydata = [2, 4, 6, 8]\n\nplt.figure(figsize=(5, 3))\nplt.title('X, Y range Properties')\nplt.plot(xdata, ydata, 'b--o', markersize=7)\nplt.xlim(10, 50)\nplt.ylim(0, 10)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-10-output-1.png){width=426 height=283}\n:::\n:::\n\n\n::: {#564a05c7 .cell execution_count=10}\n``` {.python .cell-code}\n# 시각화 옵션7 : 내장 시각화 옵션\n# Pandas 라이브러리의 plot() 메소드를 이용하여 그래프를 그릴 수 있음\nmy_score = [[60, 90, 95], [65, 85, 90], [80, 75, 100],\n            [95, 90, 85], [85, 80, 65]]\nsubject = ['1st', '2nd', '3rd']\ndf = pd.DataFrame(my_score, columns=subject)\n\n# 선 그래프\ndf.plot(kind='line', figsize=(5, 3))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-11-output-1.png){width=426 height=263}\n:::\n:::\n\n\n::: {#4f1512c1 .cell execution_count=11}\n``` {.python .cell-code}\n# 상자수염 그래프\ndf.plot(kind='box', figsize=(5, 3))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-12-output-1.png){width=426 height=263}\n:::\n:::\n\n\n::: {#bfb1cda8 .cell execution_count=12}\n``` {.python .cell-code}\n# SciPy 라이브러리 설치\n#!pip install scipy\n```\n:::\n\n\n::: {#529d1bcf .cell execution_count=13}\n``` {.python .cell-code}\n# 커널 밀도 그래프\ndf.plot(kind='kde', figsize=(5, 3))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-14-output-1.png){width=456 height=263}\n:::\n:::\n\n\n<br>\n\n## 5.3. 선 그래프\n+ 일반적으로 시간에 따라 연속적으로 변화하는 데이터를 시각화할 때 사용함\n  + x축에는 시간, y축에는 수치형 변수를 지정함\n  + 시간의 흐름에 따라 데이터의 값은 증가/감소하는가?\n  + 계절에 따른 특정 패턴이 존재하는가? 눈에 띄는 변화 시점이 있는가?\n\n<br>\n\n+ \\[데이터\\] 에어코리아에서 제공하는 2015-2020년 연도별, 시도별, 미세먼지 등급별 일수\n  + 미세먼지 등급 : 0-30(좋음), 31-80(보통), 81-150(나쁨), 151 이상(매우 나쁨)\n  + \\[실습파일\\] [04_data1.csv](./data/04_data1.csv)\n\n<br>\n\n::: {#794a8efb .cell execution_count=14}\n``` {.python .cell-code}\n# 데이터 불러오기 : area' 변수를 행 인덱스로 지정\ndata = pd.read_csv('./data/04_data1.csv', index_col='area')\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2015_good</th>\n      <th>2016_good</th>\n      <th>2017_good</th>\n      <th>2018_good</th>\n      <th>2019_good</th>\n      <th>2020_good</th>\n      <th>2015_common</th>\n      <th>2016_common</th>\n      <th>2017_common</th>\n      <th>2018_common</th>\n      <th>...</th>\n      <th>2017_bad</th>\n      <th>2018_bad</th>\n      <th>2019_bad</th>\n      <th>2020_bad</th>\n      <th>2015_verybad</th>\n      <th>2016_verybad</th>\n      <th>2017_verybad</th>\n      <th>2018_verybad</th>\n      <th>2019_verybad</th>\n      <th>2020_verybad</th>\n    </tr>\n    <tr>\n      <th>area</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Nationwide</th>\n      <td>72.0</td>\n      <td>54</td>\n      <td>84</td>\n      <td>135</td>\n      <td>117</td>\n      <td>171</td>\n      <td>267.0</td>\n      <td>297</td>\n      <td>265</td>\n      <td>209</td>\n      <td>...</td>\n      <td>14</td>\n      <td>21</td>\n      <td>16</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Metropolitan</th>\n      <td>72.0</td>\n      <td>45</td>\n      <td>77</td>\n      <td>126</td>\n      <td>109</td>\n      <td>150</td>\n      <td>259.0</td>\n      <td>290</td>\n      <td>260</td>\n      <td>217</td>\n      <td>...</td>\n      <td>26</td>\n      <td>22</td>\n      <td>27</td>\n      <td>4</td>\n      <td>4.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Seoul</th>\n      <td>97.0</td>\n      <td>65</td>\n      <td>113</td>\n      <td>140</td>\n      <td>139</td>\n      <td>168</td>\n      <td>243.0</td>\n      <td>277</td>\n      <td>230</td>\n      <td>204</td>\n      <td>...</td>\n      <td>20</td>\n      <td>21</td>\n      <td>25</td>\n      <td>5</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Busan</th>\n      <td>102.0</td>\n      <td>89</td>\n      <td>86</td>\n      <td>136</td>\n      <td>163</td>\n      <td>208</td>\n      <td>242.0</td>\n      <td>259</td>\n      <td>269</td>\n      <td>212</td>\n      <td>...</td>\n      <td>10</td>\n      <td>16</td>\n      <td>9</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Daegu</th>\n      <td>90.0</td>\n      <td>103</td>\n      <td>111</td>\n      <td>155</td>\n      <td>148</td>\n      <td>176</td>\n      <td>248.0</td>\n      <td>246</td>\n      <td>244</td>\n      <td>196</td>\n      <td>...</td>\n      <td>10</td>\n      <td>13</td>\n      <td>17</td>\n      <td>4</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 24 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#ca47802f .cell execution_count=15}\n``` {.python .cell-code}\n# '2015-2020년 미세먼지 좋음' 일수만 가져오기\ndata_good = data.copy()\ndata_good = data_good.loc[:, '2015_good':'2020_good']\ndata_good\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2015_good</th>\n      <th>2016_good</th>\n      <th>2017_good</th>\n      <th>2018_good</th>\n      <th>2019_good</th>\n      <th>2020_good</th>\n    </tr>\n    <tr>\n      <th>area</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Nationwide</th>\n      <td>72.0</td>\n      <td>54</td>\n      <td>84</td>\n      <td>135</td>\n      <td>117</td>\n      <td>171</td>\n    </tr>\n    <tr>\n      <th>Metropolitan</th>\n      <td>72.0</td>\n      <td>45</td>\n      <td>77</td>\n      <td>126</td>\n      <td>109</td>\n      <td>150</td>\n    </tr>\n    <tr>\n      <th>Seoul</th>\n      <td>97.0</td>\n      <td>65</td>\n      <td>113</td>\n      <td>140</td>\n      <td>139</td>\n      <td>168</td>\n    </tr>\n    <tr>\n      <th>Busan</th>\n      <td>102.0</td>\n      <td>89</td>\n      <td>86</td>\n      <td>136</td>\n      <td>163</td>\n      <td>208</td>\n    </tr>\n    <tr>\n      <th>Daegu</th>\n      <td>90.0</td>\n      <td>103</td>\n      <td>111</td>\n      <td>155</td>\n      <td>148</td>\n      <td>176</td>\n    </tr>\n    <tr>\n      <th>Incheon</th>\n      <td>67.0</td>\n      <td>49</td>\n      <td>78</td>\n      <td>140</td>\n      <td>115</td>\n      <td>182</td>\n    </tr>\n    <tr>\n      <th>Gwangju</th>\n      <td>122.0</td>\n      <td>151</td>\n      <td>134</td>\n      <td>149</td>\n      <td>117</td>\n      <td>210</td>\n    </tr>\n    <tr>\n      <th>Daejeon</th>\n      <td>111.0</td>\n      <td>92</td>\n      <td>83</td>\n      <td>121</td>\n      <td>143</td>\n      <td>182</td>\n    </tr>\n    <tr>\n      <th>Ulsan</th>\n      <td>101.0</td>\n      <td>101</td>\n      <td>104</td>\n      <td>162</td>\n      <td>173</td>\n      <td>206</td>\n    </tr>\n    <tr>\n      <th>Sejong</th>\n      <td>NaN</td>\n      <td>65</td>\n      <td>69</td>\n      <td>130</td>\n      <td>127</td>\n      <td>165</td>\n    </tr>\n    <tr>\n      <th>Gyeonggi</th>\n      <td>65.0</td>\n      <td>45</td>\n      <td>59</td>\n      <td>123</td>\n      <td>97</td>\n      <td>137</td>\n    </tr>\n    <tr>\n      <th>Gangwon</th>\n      <td>77.0</td>\n      <td>65</td>\n      <td>108</td>\n      <td>150</td>\n      <td>159</td>\n      <td>219</td>\n    </tr>\n    <tr>\n      <th>Chungbuk</th>\n      <td>90.0</td>\n      <td>99</td>\n      <td>106</td>\n      <td>117</td>\n      <td>113</td>\n      <td>164</td>\n    </tr>\n    <tr>\n      <th>Chungnam</th>\n      <td>94.0</td>\n      <td>65</td>\n      <td>74</td>\n      <td>144</td>\n      <td>96</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>Jeonbuk</th>\n      <td>86.0</td>\n      <td>58</td>\n      <td>69</td>\n      <td>121</td>\n      <td>108</td>\n      <td>171</td>\n    </tr>\n    <tr>\n      <th>Jeonnam</th>\n      <td>142.0</td>\n      <td>166</td>\n      <td>160</td>\n      <td>191</td>\n      <td>193</td>\n      <td>247</td>\n    </tr>\n    <tr>\n      <th>Gyeongbuk</th>\n      <td>101.0</td>\n      <td>123</td>\n      <td>124</td>\n      <td>129</td>\n      <td>142</td>\n      <td>212</td>\n    </tr>\n    <tr>\n      <th>Gyeongnam</th>\n      <td>76.0</td>\n      <td>75</td>\n      <td>93</td>\n      <td>136</td>\n      <td>136</td>\n      <td>220</td>\n    </tr>\n    <tr>\n      <th>Jeju</th>\n      <td>84.0</td>\n      <td>138</td>\n      <td>166</td>\n      <td>202</td>\n      <td>176</td>\n      <td>220</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#93cc3542 .cell execution_count=16}\n``` {.python .cell-code}\n# 행렬 전환(transpose)\n# 인덱스는 열 이름이 되고, 열 이름은 인덱스가 됨\ndata_good = data_good.T\ndata_good\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>area</th>\n      <th>Nationwide</th>\n      <th>Metropolitan</th>\n      <th>Seoul</th>\n      <th>Busan</th>\n      <th>Daegu</th>\n      <th>Incheon</th>\n      <th>Gwangju</th>\n      <th>Daejeon</th>\n      <th>Ulsan</th>\n      <th>Sejong</th>\n      <th>Gyeonggi</th>\n      <th>Gangwon</th>\n      <th>Chungbuk</th>\n      <th>Chungnam</th>\n      <th>Jeonbuk</th>\n      <th>Jeonnam</th>\n      <th>Gyeongbuk</th>\n      <th>Gyeongnam</th>\n      <th>Jeju</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2015_good</th>\n      <td>72.0</td>\n      <td>72.0</td>\n      <td>97.0</td>\n      <td>102.0</td>\n      <td>90.0</td>\n      <td>67.0</td>\n      <td>122.0</td>\n      <td>111.0</td>\n      <td>101.0</td>\n      <td>NaN</td>\n      <td>65.0</td>\n      <td>77.0</td>\n      <td>90.0</td>\n      <td>94.0</td>\n      <td>86.0</td>\n      <td>142.0</td>\n      <td>101.0</td>\n      <td>76.0</td>\n      <td>84.0</td>\n    </tr>\n    <tr>\n      <th>2016_good</th>\n      <td>54.0</td>\n      <td>45.0</td>\n      <td>65.0</td>\n      <td>89.0</td>\n      <td>103.0</td>\n      <td>49.0</td>\n      <td>151.0</td>\n      <td>92.0</td>\n      <td>101.0</td>\n      <td>65.0</td>\n      <td>45.0</td>\n      <td>65.0</td>\n      <td>99.0</td>\n      <td>65.0</td>\n      <td>58.0</td>\n      <td>166.0</td>\n      <td>123.0</td>\n      <td>75.0</td>\n      <td>138.0</td>\n    </tr>\n    <tr>\n      <th>2017_good</th>\n      <td>84.0</td>\n      <td>77.0</td>\n      <td>113.0</td>\n      <td>86.0</td>\n      <td>111.0</td>\n      <td>78.0</td>\n      <td>134.0</td>\n      <td>83.0</td>\n      <td>104.0</td>\n      <td>69.0</td>\n      <td>59.0</td>\n      <td>108.0</td>\n      <td>106.0</td>\n      <td>74.0</td>\n      <td>69.0</td>\n      <td>160.0</td>\n      <td>124.0</td>\n      <td>93.0</td>\n      <td>166.0</td>\n    </tr>\n    <tr>\n      <th>2018_good</th>\n      <td>135.0</td>\n      <td>126.0</td>\n      <td>140.0</td>\n      <td>136.0</td>\n      <td>155.0</td>\n      <td>140.0</td>\n      <td>149.0</td>\n      <td>121.0</td>\n      <td>162.0</td>\n      <td>130.0</td>\n      <td>123.0</td>\n      <td>150.0</td>\n      <td>117.0</td>\n      <td>144.0</td>\n      <td>121.0</td>\n      <td>191.0</td>\n      <td>129.0</td>\n      <td>136.0</td>\n      <td>202.0</td>\n    </tr>\n    <tr>\n      <th>2019_good</th>\n      <td>117.0</td>\n      <td>109.0</td>\n      <td>139.0</td>\n      <td>163.0</td>\n      <td>148.0</td>\n      <td>115.0</td>\n      <td>117.0</td>\n      <td>143.0</td>\n      <td>173.0</td>\n      <td>127.0</td>\n      <td>97.0</td>\n      <td>159.0</td>\n      <td>113.0</td>\n      <td>96.0</td>\n      <td>108.0</td>\n      <td>193.0</td>\n      <td>142.0</td>\n      <td>136.0</td>\n      <td>176.0</td>\n    </tr>\n    <tr>\n      <th>2020_good</th>\n      <td>171.0</td>\n      <td>150.0</td>\n      <td>168.0</td>\n      <td>208.0</td>\n      <td>176.0</td>\n      <td>182.0</td>\n      <td>210.0</td>\n      <td>182.0</td>\n      <td>206.0</td>\n      <td>165.0</td>\n      <td>137.0</td>\n      <td>219.0</td>\n      <td>164.0</td>\n      <td>145.0</td>\n      <td>171.0</td>\n      <td>247.0</td>\n      <td>212.0</td>\n      <td>220.0</td>\n      <td>220.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#fcbf9da1 .cell execution_count=17}\n``` {.python .cell-code}\n# 열 이름 상단의 이름(label) 삭제\ndata_good.columns.name = ''\n\n# 인덱스를 연도(2015-2020)로 수정\ndata_good.index = range(2015, 2021)\ndata_good\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Nationwide</th>\n      <th>Metropolitan</th>\n      <th>Seoul</th>\n      <th>Busan</th>\n      <th>Daegu</th>\n      <th>Incheon</th>\n      <th>Gwangju</th>\n      <th>Daejeon</th>\n      <th>Ulsan</th>\n      <th>Sejong</th>\n      <th>Gyeonggi</th>\n      <th>Gangwon</th>\n      <th>Chungbuk</th>\n      <th>Chungnam</th>\n      <th>Jeonbuk</th>\n      <th>Jeonnam</th>\n      <th>Gyeongbuk</th>\n      <th>Gyeongnam</th>\n      <th>Jeju</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2015</th>\n      <td>72.0</td>\n      <td>72.0</td>\n      <td>97.0</td>\n      <td>102.0</td>\n      <td>90.0</td>\n      <td>67.0</td>\n      <td>122.0</td>\n      <td>111.0</td>\n      <td>101.0</td>\n      <td>NaN</td>\n      <td>65.0</td>\n      <td>77.0</td>\n      <td>90.0</td>\n      <td>94.0</td>\n      <td>86.0</td>\n      <td>142.0</td>\n      <td>101.0</td>\n      <td>76.0</td>\n      <td>84.0</td>\n    </tr>\n    <tr>\n      <th>2016</th>\n      <td>54.0</td>\n      <td>45.0</td>\n      <td>65.0</td>\n      <td>89.0</td>\n      <td>103.0</td>\n      <td>49.0</td>\n      <td>151.0</td>\n      <td>92.0</td>\n      <td>101.0</td>\n      <td>65.0</td>\n      <td>45.0</td>\n      <td>65.0</td>\n      <td>99.0</td>\n      <td>65.0</td>\n      <td>58.0</td>\n      <td>166.0</td>\n      <td>123.0</td>\n      <td>75.0</td>\n      <td>138.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>84.0</td>\n      <td>77.0</td>\n      <td>113.0</td>\n      <td>86.0</td>\n      <td>111.0</td>\n      <td>78.0</td>\n      <td>134.0</td>\n      <td>83.0</td>\n      <td>104.0</td>\n      <td>69.0</td>\n      <td>59.0</td>\n      <td>108.0</td>\n      <td>106.0</td>\n      <td>74.0</td>\n      <td>69.0</td>\n      <td>160.0</td>\n      <td>124.0</td>\n      <td>93.0</td>\n      <td>166.0</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>135.0</td>\n      <td>126.0</td>\n      <td>140.0</td>\n      <td>136.0</td>\n      <td>155.0</td>\n      <td>140.0</td>\n      <td>149.0</td>\n      <td>121.0</td>\n      <td>162.0</td>\n      <td>130.0</td>\n      <td>123.0</td>\n      <td>150.0</td>\n      <td>117.0</td>\n      <td>144.0</td>\n      <td>121.0</td>\n      <td>191.0</td>\n      <td>129.0</td>\n      <td>136.0</td>\n      <td>202.0</td>\n    </tr>\n    <tr>\n      <th>2019</th>\n      <td>117.0</td>\n      <td>109.0</td>\n      <td>139.0</td>\n      <td>163.0</td>\n      <td>148.0</td>\n      <td>115.0</td>\n      <td>117.0</td>\n      <td>143.0</td>\n      <td>173.0</td>\n      <td>127.0</td>\n      <td>97.0</td>\n      <td>159.0</td>\n      <td>113.0</td>\n      <td>96.0</td>\n      <td>108.0</td>\n      <td>193.0</td>\n      <td>142.0</td>\n      <td>136.0</td>\n      <td>176.0</td>\n    </tr>\n    <tr>\n      <th>2020</th>\n      <td>171.0</td>\n      <td>150.0</td>\n      <td>168.0</td>\n      <td>208.0</td>\n      <td>176.0</td>\n      <td>182.0</td>\n      <td>210.0</td>\n      <td>182.0</td>\n      <td>206.0</td>\n      <td>165.0</td>\n      <td>137.0</td>\n      <td>219.0</td>\n      <td>164.0</td>\n      <td>145.0</td>\n      <td>171.0</td>\n      <td>247.0</td>\n      <td>212.0</td>\n      <td>220.0</td>\n      <td>220.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#9cf331fb .cell execution_count=18}\n``` {.python .cell-code}\n# 선 그래프1 : 2015-2020 전국 미세먼지(PM10) 좋음 일수 변화 추이\nplt.figure(figsize=(8, 3))\nplt.title('2015-2020 Nationwide Fine Dust(PM10) - Good Days')\nplt.plot(data_good['Nationwide'], color='b', marker='o')\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-19-output-1.png){width=668 height=302}\n:::\n:::\n\n\n::: {#d812389e .cell execution_count=19}\n``` {.python .cell-code}\n# 선 그래프2 : 2015-2020 전국, 수도권, 전북 미세먼지(PM10) 좋음 일수 변화 추이\nplt.figure(figsize=(8, 3))\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Area')\n\nfor area in ['Nationwide', 'Metropolitan', 'Jeonbuk']:\n    plt.plot(data_good[area], marker='o', label=area)\n\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-20-output-1.png){width=668 height=302}\n:::\n:::\n\n\n<br>\n\n## 5.4. 막대 그래프\n+ 일반적으로 집단 간 비교나 범주형 변수를 시각화할 때 사용함\n+ 가독성 측면에서 항목의 개수가 적으면 세로 막대, 많으면 가로 막대가 유리함\n\n<br>\n\n::: {#6b80e45f .cell execution_count=20}\n``` {.python .cell-code}\n# 전국, 수도권, 전북의 '2015년 미세먼지 매우 나쁨' 일수만 가져오기\ndata2015_verybad = data.copy()\ndata2015_verybad = data2015_verybad.loc[['Nationwide', 'Metropolitan', 'Jeonbuk'], '2015_verybad']\ndata2015_verybad\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\narea\nNationwide      1.0\nMetropolitan    4.0\nJeonbuk         3.0\nName: 2015_verybad, dtype: float64\n```\n:::\n:::\n\n\n::: {#6d0bd752 .cell execution_count=21}\n``` {.python .cell-code}\n# 막대 그래프1 : 2015년 전국, 수도권, 전북 미세먼지(PM10) 매우 나쁨 일수 비교\nplt.figure(figsize=(5, 3))\nplt.title('2015 Fine Dust(PM10) - Very Bad Days By Area')\nplt.bar(data2015_verybad.index, data2015_verybad, color='c')\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-22-output-1.png){width=430 height=302}\n:::\n:::\n\n\n::: {#af8d45f3 .cell execution_count=22}\n``` {.python .cell-code}\n# 전라권의 '2015-2020년 미세먼지 좋음' 일수만 가져오기\ndata6 = data.copy()\ndata6 = data6.loc[['Jeonbuk', 'Jeonnam', 'Gwangju'], '2015_good':'2020_good']\ndata6\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2015_good</th>\n      <th>2016_good</th>\n      <th>2017_good</th>\n      <th>2018_good</th>\n      <th>2019_good</th>\n      <th>2020_good</th>\n    </tr>\n    <tr>\n      <th>area</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Jeonbuk</th>\n      <td>86.0</td>\n      <td>58</td>\n      <td>69</td>\n      <td>121</td>\n      <td>108</td>\n      <td>171</td>\n    </tr>\n    <tr>\n      <th>Jeonnam</th>\n      <td>142.0</td>\n      <td>166</td>\n      <td>160</td>\n      <td>191</td>\n      <td>193</td>\n      <td>247</td>\n    </tr>\n    <tr>\n      <th>Gwangju</th>\n      <td>122.0</td>\n      <td>151</td>\n      <td>134</td>\n      <td>149</td>\n      <td>117</td>\n      <td>210</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#b173f6c3 .cell execution_count=23}\n``` {.python .cell-code}\n# 막대 그래프2 : 2015-2020 전라권 미세먼지(PM10) 좋음 일수 비교\nplt.figure(figsize=(8, 3))\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Jeolla Region')\n\nindex = np.arange(3)\nfor year in data6.columns:\n    plt.bar(index, data6[year], width=0.15, label=year.split(\"_\")[0])\n    index = index + 0.15\n\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.xticks(index-0.53, data6.index)\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-24-output-1.png){width=668 height=302}\n:::\n:::\n\n\n::: {#dc0d97ac .cell execution_count=24}\n``` {.python .cell-code}\n# 17개 시도의 '2020년 미세먼지 나쁨' 일수만 가져오기\ndata2020_bad = data.copy()\ndata2020_bad = data2020_bad.loc['Seoul':, '2020_bad']\ndata2020_bad\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\narea\nSeoul        5\nBusan        2\nDaegu        4\nIncheon      2\nGwangju      0\nDaejeon      1\nUlsan        2\nSejong       4\nGyeonggi     6\nGangwon      3\nChungbuk     3\nChungnam     6\nJeonbuk      1\nJeonnam      0\nGyeongbuk    2\nGyeongnam    0\nJeju         2\nName: 2020_bad, dtype: int64\n```\n:::\n:::\n\n\n::: {#797dcd6d .cell execution_count=25}\n``` {.python .cell-code}\n# '2020년 미세먼지 나쁨' 일수를 기준으로 오름차순 정렬\ndata2020_bad.sort_values(inplace=True)\ndata2020_bad\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\narea\nGwangju      0\nGyeongnam    0\nJeonnam      0\nDaejeon      1\nJeonbuk      1\nJeju         2\nBusan        2\nIncheon      2\nUlsan        2\nGyeongbuk    2\nGangwon      3\nChungbuk     3\nDaegu        4\nSejong       4\nSeoul        5\nChungnam     6\nGyeonggi     6\nName: 2020_bad, dtype: int64\n```\n:::\n:::\n\n\n::: {#7ccbffe7 .cell execution_count=26}\n``` {.python .cell-code}\ntype(data2020_bad)\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\npandas.core.series.Series\n```\n:::\n:::\n\n\n::: {#10adfa6b .cell execution_count=27}\n``` {.python .cell-code}\n# 가로형 막대 그래프 : 2020년 시도별 미세먼지(PM10) 나쁨 일수 비교\nplt.figure(figsize=(4, 4))\nplt.title('2020 Fine Dust(PM10) - Bay Days By Area')\nplt.barh(data2020_bad.index, data2020_bad)\nplt.xlabel('Count')\nplt.ylabel('Area')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-28-output-1.png){width=444 height=376}\n:::\n:::\n\n\n::: {#fc4d54eb .cell execution_count=28}\n``` {.python .cell-code}\n# 특·광역시의 '2017-2020년 미세먼지 보통' 일수만 가져오기\ndata4 = data.copy()\ndata4 = data4.loc['Seoul':'Ulsan', '2017_common':'2020_common']\ndata4\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2017_common</th>\n      <th>2018_common</th>\n      <th>2019_common</th>\n      <th>2020_common</th>\n    </tr>\n    <tr>\n      <th>area</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Seoul</th>\n      <td>230</td>\n      <td>204</td>\n      <td>198</td>\n      <td>193</td>\n    </tr>\n    <tr>\n      <th>Busan</th>\n      <td>269</td>\n      <td>212</td>\n      <td>193</td>\n      <td>156</td>\n    </tr>\n    <tr>\n      <th>Daegu</th>\n      <td>244</td>\n      <td>196</td>\n      <td>200</td>\n      <td>186</td>\n    </tr>\n    <tr>\n      <th>Incheon</th>\n      <td>264</td>\n      <td>207</td>\n      <td>227</td>\n      <td>182</td>\n    </tr>\n    <tr>\n      <th>Gwangju</th>\n      <td>216</td>\n      <td>193</td>\n      <td>227</td>\n      <td>156</td>\n    </tr>\n    <tr>\n      <th>Daejeon</th>\n      <td>268</td>\n      <td>219</td>\n      <td>198</td>\n      <td>183</td>\n    </tr>\n    <tr>\n      <th>Ulsan</th>\n      <td>250</td>\n      <td>184</td>\n      <td>181</td>\n      <td>158</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#5140b70a .cell execution_count=29}\n``` {.python .cell-code}\n# 누적 막대 그래프 : 2017-2020 특·광역시 미세먼지(PM10) 보통 일수 비교\nplt.figure(figsize=(8, 3))\nplt.title('2017-2020 Fine Dust(PM10) - Common Days By Major City')\n\nindex = np.arange(7)\nleft = np.zeros(len(data4))\nfor year in data4.columns:\n    plt.barh(index, data4[year], left=left, label=year.split(\"_\")[0])\n    left = left + data4[year]\n\nplt.xlim(0, 1000)\nplt.xlabel('Count')\nplt.ylabel('Area')\nplt.yticks(index, data4.index)\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-30-output-1.png){width=717 height=302}\n:::\n:::\n\n\n<br>\n\n## 5.5. 산점도\n+ 두 수치형 변수 간 관계를 시각화할 때 사용함\n+ 데이터의 분포, 이상값, 변수 간 상관관계, 그룹화된 패턴 등을 직관적으로 파악할 수 있음\n\n<br>\n\n+ \\[데이터\\] 캐글에서 제공하는 붓꽃 데이터\n  + SepalLength(꽃받침 길이), SepalWidth(꽃받침 너비), PetalLength(꽃잎 길이), PetalWidth(꽃잎 너비), Species(품종)\n  + \\[실습파일\\] [04_data2.csv](./data/04_data2.csv)\n\n<br>\n\n::: {#60668d24 .cell execution_count=30}\n``` {.python .cell-code}\n# 데이터 불러오기\ndata = pd.read_csv('./data/04_data2.csv')\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalLength</th>\n      <th>SepalWidth</th>\n      <th>PetalLength</th>\n      <th>PetalWidth</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#c230710c .cell execution_count=31}\n``` {.python .cell-code}\n# 산점도1 : 꽃잎 길이와 꽃잎 너비의 관계\n# 꽃잎 길이가 길수록 꽆잎 너비도 대체로 증가하는 경향이 있음\nplt.figure(figsize=(4, 4))\nplt.title('Petal Length vs Width')\nplt.scatter(data['PetalLength'], data['PetalWidth'])\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-32-output-1.png){width=366 height=376}\n:::\n:::\n\n\n::: {#9f582a99 .cell execution_count=32}\n``` {.python .cell-code}\n# 산점도2 : 꽃잎 길이와 꽃잎 너비, 품종의 관계\n# 각 품종별로 꽃잎 길이와 너비가 뚜렷이 구분됨\n# setosa는 작고 좁은 꽃잎, virginica는 크고 넓은 꽃잎을 가짐\nplt.figure(figsize=(4, 4))\nplt.title('Petal Length vs Width By Species')\nplt.scatter(data['PetalLength'], data['PetalWidth'], alpha = 0.5,\n            c=data['Species'].map({'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}))\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-33-output-1.png){width=366 height=376}\n:::\n:::\n\n\n<br>\n\n## 5.6. 히스토그램\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 데이터를 일정한 구간(bin)으로 나누고, 각 구간에 속하는 값들의 빈도를 막대의 높이로 나타냄\n\n<br>\n\n::: {#37abe582 .cell execution_count=33}\n``` {.python .cell-code}\n# 히스토그램 : setosa 품종의 꽃잎 길이 분포\n# setosa 품종의 꽃잎 길이는 1.0~1.9cm 사이에 분포함\n# 데이터는 대부분 1.5cm 주변에 집중되어 있으며, 대칭에 가까운 형태로 나타남\nsetosa = data.loc[data['Species']=='setosa',]\n\nplt.figure(figsize=(5, 3))\nplt.title('Distribution of Petal Length in Iris Setosa')\nplt.hist(setosa['PetalLength'], bins=8, edgecolor='black')\nplt.xlabel('Petal Length')\nplt.ylabel('Count')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-34-output-1.png){width=436 height=302}\n:::\n:::\n\n\n<br>\n\n## 5.7. 상자수염 그래프\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 다섯 숫자 요약값을 기반으로 이상값, 분포의 비대칭 여부 등을 직관적으로 파악할 수 있음\n\n<br>\n\n![](./images/fig2-4.jpg){width=40%}\n\n<br>\n\n::: {#d497ec7a .cell execution_count=34}\n``` {.python .cell-code}\n# 상자수염 그래프 : 꽃받침 길이와 너비의 분포 비교\n# 꽃받침 길이는 꽃받침 너비보다 전체적으로 큰 값을 가지며, 변동 폭도 더 큼\n# 꽃받침 너비는 상대적으로 산포가 작고, 일부 이상값(outlier)이 존재함\nplt.figure(figsize=(5, 3))\nplt.boxplot([data['SepalLength'], data['SepalWidth']],\n            tick_labels=['Sepal Length', 'Sepal Width'],\n            vert=False, widths=0.5)\nplt.title('Sepal Length and Width')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](2_3_matplotlib_files/figure-html/cell-35-output-1.png){width=488 height=283}\n:::\n:::\n\n\n",
    "supporting": [
      "2_3_matplotlib_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}