{"title":"5.1. 데이터 시각화","markdown":{"yaml":{"jupyter":"python3"},"headingText":"5.1. 데이터 시각화","containsRefs":false,"markdown":"\n\n<h1>5. Matplotlib</h1>\n\n+ 데이터 시각화(data visualization)\n  + 데이터 분석 결과를 쉽게 이해할 수 있도록 표현하고 전달되는 과정\n  + 복잡한 정보를 한 눈에 파악하고, 숨겨진 패턴이나 관계를 드러냄\n  + 탐색적 자료 분석(EDA), 결과 해석, 의사결정 등에 폭넓게 활용\n\n<br>\n\n+ 데이터 시각화 단계\n  1. 시각화 라이브러리 불러오기\n  2. x축, y축에 표시할 데이터 정하기\n  3. `plot()` 함수에 데이터 입력하기\n  4. 그래프 보여주기\n\n<br>\n\n## 5.2. Matplotlib\n### 5.2.1. 시각화 옵션\n+ Matplotlib\n  + 넘파이 배열을 기반으로 개발된 다중 플랫폼 데이터 시각화 라이브러리\n  + 다양한 운영체제와 그래픽 백엔드에서 안정적으로 작동함\n  + 일반적으로 Pandas의 데이터프레임과 함께 자주 사용됨\n\n<br>\n\n```{python}\n# Matplotlib 라이브러리 설치\n#!pip install matplotlib\n```\n\n```{python}\n# Matplotlib 라이브러리의 pylot 모듈 불러오기\nimport matplotlib.pyplot as plt\n```\n\n```{python}\nimport numpy as np\nimport pandas as pd\n```\n\n```{python}\n# 시각화 옵션1 : 제목\nplt.figure(figsize=(5, 3))\nplt.title('Line Graph')\nxdata = [3, 5, 7, 9]\nydata = [2, 4, 6, 8]\nplt.plot(xdata, ydata)\nplt.show()\n```\n\n```{python}\n# 시각화 옵션2 : 범례\n# plot()의 label 속성에 범례에 표시할 문자열을 작성\nplt.figure(figsize=(5, 3))\nplt.title('Legend properties')\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\nplt.plot(data1, label='Salary')\nplt.plot(data2, label='Prices')\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 시각화 옵션3 : 색상\n# plot()의 color 속성에 색상 설정\nplt.figure(figsize=(5, 3))\nplt.title('Color properties')\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\nplt.plot(xdata, ydata, color='green')\nplt.show()\n```\n\n```{python}\n# 시각화 옵션4 : x축 및 y축 이름\nplt.figure(figsize=(5, 3))\nplt.title('Axis name properties')\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\nplt.plot(xdata, ydata)\nplt.xlabel('X value')\nplt.ylabel('Y value')\nplt.show()\n```\n\n```{python}\n# 시각화 옵션5 : 그래프 선 모양\n# plot()의 linestyle 속성에 선 모양을 '-', '--', '-.', ':' 등으로 설정\nplt.figure(figsize=(5, 3))\nplt.title('Line shape properties')\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\nplt.plot(data1, color='b', linestyle='--', label='dashed')\nplt.plot(data2, 'r:', label='dotted')\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 시각화 옵션6 : 그림 범위 지정\nplt.figure(figsize=(5, 3))\nplt.title('X, Y range properties')\nxdata = [15, 25, 35, 45]\nydata = [2, 4, 6, 8]\nplt.plot(xdata, ydata, 'b--o', markersize=7)\nplt.xlim(10, 50)\nplt.ylim(0, 10)\nplt.show()\n```\n\n```{python}\n#| scrolled: true\n# 시각화 옵션7 : 내장 시각화 옵션\n# Pandas 라이브러리의 plot() 메소드를 이용하여 그래프를 그릴 수 있음\nmy_score = [[60, 90, 95], [65, 85, 90], [80, 75, 100],\n            [95, 90, 85], [85, 80, 65]]\nsubject = ['1st', '2nd', '3rd']\ndf = pd.DataFrame(my_score, columns=subject)\n\n# 선 그래프\ndf.plot(kind='line', figsize=(5, 3))\n```\n\n```{python}\n# 상자수염 그래프\ndf.plot(kind='box', figsize=(5, 3))\n```\n\n```{python}\n# SciPy 라이브러리 설치\n#!pip install scipy\n```\n\n```{python}\n# 커널 밀도 그래프\ndf.plot(kind='kde', figsize=(5, 3))\n```\n\n<br>\n\n### 5.2.2. 선 그래프\n+ 일반적으로 시간에 따라 연속적으로 변화하는 데이터를 시각화할 때 사용함\n  + x축에는 시간, y축에는 수치형 변수를 지정함\n  + 시간의 흐름에 따라 데이터의 값은 증가/감소하는가?\n  + 계절에 따른 특정 패턴이 존재하는가? 눈에 띄는 변화 시점이 있는가?\n\n<br>\n\n+ \\[데이터\\] 에어코리아에서 제공하는 2015-2020년 연도별, 시도별, 미세먼지 등급별 일수\n  + 미세먼지 등급 : 0-30(좋음), 31-80(보통), 81-150(나쁨), 151 이상(매우 나쁨)\n  + \\[실습파일\\] [04_data1.csv](./data/04_data1.csv)\n\n<br>\n\n```{python}\n# 데이터 불러오기\ndata = pd.read_csv('./data/04_data1.csv', index_col='area')\ndata.head()\n```\n\n```{python}\n# '2015-2020년 미세먼지 좋음' 일수만 가져온 후, 행렬 전환(transpose)\ndata_good = data.copy()\ndata_good = data_good.iloc[:,0:6].T\ndata_good\n```\n\n```{python}\n# 인덱스를 연도로 수정\ndata_good.columns.name = 'year'\ndata_good.index = range(2015, 2021)\ndata_good\n```\n\n```{python}\n# 선 그래프1\nplt.figure(figsize=(8, 3))\nplt.plot(data_good['Nationwide'], color='b', marker='o')\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.title('2015-2020 Nationwide Fine Dust(PM10) - Good Days')\nplt.grid()\nplt.show()\n```\n\n```{python}\n# 선 그래프2\nplt.figure(figsize=(8, 3))\nfor area in ['Nationwide', 'Metropolitan', 'Jeonbuk']:\n    plt.plot(data_good[area], marker='o', label=area)\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Area')\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n<br>\n\n### 5.2.3. 막대 그래프\n+ 일반적으로 집단 간 비교나 범주형 변수를 시각화할 때 사용함\n+ 가독성 측면에서 항목의 개수가 적으면 가로 막대, 많으면 세로 막대가 편함\n\n<br>\n\n```{python}\n# '2015년 미세먼지 매우 나쁨' 일수만 가져오기\ndata2015_verybad = data.copy()\ndata2015_verybad = data2015_verybad['2015_verybad']\ndata2015_verybad\n```\n\n```{python}\n# 막대 그래프1\nplt.figure(figsize=(20, 5))\nplt.bar(data2015_verybad.index, data2015_verybad, color='g')\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.title('2015 Fine Dust(PM10) - Very Bad Days By Area')\nplt.show()\n```\n\n```{python}\n# 대도시의 '2015-2020년 미세먼지 좋음' 일수만 가져오기\ndata6 = data.copy()\ndata6 = data6.loc['Seoul':'Ulsan', '2015_good':'2020_good']\ndata6\n```\n\n```{python}\n# 막대 그래프2\nindex = np.arange(7)\n\nplt.figure(figsize=(20, 5))\nfor year in data6.columns:\n    plt.bar(index, data6[year], width=0.15, label=year)\n    index = index + 0.15\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Major City')\nplt.xticks(index-0.53, data6.index)\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 대도시의 '2017-2020년 미세먼지 보통' 일수만 가져오기\ndata4 = data.copy()\ndata4 = data4.loc['Seoul':'Ulsan', '2017_common':'2020_common']\ndata4\n```\n\n```{python}\n# 막대 그래프3 : 누적 막대 그래프\nindex = np.arange(7)\nleft = np.zeros(len(data4))\n\nplt.figure(figsize=(8, 3))\nfor year in data4.columns:\n    plt.barh(index, data4[year], left=left, label=year.split(\"_\")[0])\n    left = left + data4[year]\nplt.xlim(0, 1000)\nplt.xlabel('Count')\nplt.ylabel('Area')\nplt.title('2017-2020 Fine Dust(PM10) - Common Days By Major City')\nplt.yticks(index, data4.index)\nplt.legend()\nplt.show()\n```\n\n<br>\n\n### 5.2.4. 산점도\n+ 서로 다른 두 수치형 변수 간 관계를 시각화할 때 사용함\n+ 데이터의 분포, 이상값, 변수 간 상관관계, 그룹화된 패턴 등을 직관적으로 파악할 수 있음\n\n<br>\n\n+ \\[데이터\\] 캐글에서 제공하는 붓꽃 데이터\n  + SepalLength(꽃받침 길이), SepalWidth(꽃받침 너비), PetalLength(꽃잎 길이), PetalWidth(꽃잎 너비), Species(품종)\n  + \\[실습파일\\] [04_data1.csv](./data/04_data1.csv)\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 290}\n# 데이터 불러오기\ndata = pd.read_csv('./data/04_data2.csv')\ndata.head()\n```\n\n```{python}\n# 산점도1\nplt.figure(figsize=(4, 4))\nplt.scatter(data['PetalLength'], data['PetalWidth'])\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.title('Iris Petal Scatter Plot')\nplt.show()\n```\n\n```{python}\n# 산점도2\nplt.figure(figsize=(4, 4))\nplt.scatter(data['PetalLength'], data['PetalWidth'],\n            c=data['Species'].map({'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}),\n            alpha = 0.5)\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.title('Iris Petal Scatter Plot')\nplt.show()\n```\n\n<br>\n\n### 5.2.5. 히스토그램\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 데이터를 일정한 구간(bin)으로 나누고, 각 구간에 속하는 값들의 빈도를 막대의 높이로 나타냄\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 290}\n# 히스토그램\nsetosa = data.loc[data['Species']=='setosa',]\n\nplt.figure(figsize=(5, 3))\nplt.hist(setosa['PetalLength'], bins=8, edgecolor='black')\nplt.xlabel('Petal')\nplt.ylabel('Length')\nplt.title('Iris Setosa Petal Length Histogram')\nplt.show()\n```\n\n<br>\n\n### 5.2.6. 상자수염 그래프\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 다섯 숫자 요약값을 기반으로 이상값, 분포의 비대칭 여부 등을 직관적으로 파악할 수 있음\n\n<br>\n\n![](./images/fig2-4.jpg){width=40%}\n\n<br>\n\n```{python}\n# 상자수염 그래프\nplt.figure(figsize=(5, 3))\nplt.boxplot([data['SepalLength'], data['SepalWidth']],\n            tick_labels=['Sepal Length', 'Sepal Width'],\n            vert=False)\nplt.xlabel('Value')\nplt.ylabel('Sepal')\nplt.title('Iris Sepal Box Plot')\nplt.show()\n```\n\n","srcMarkdownNoYaml":"\n\n<h1>5. Matplotlib</h1>\n\n## 5.1. 데이터 시각화\n+ 데이터 시각화(data visualization)\n  + 데이터 분석 결과를 쉽게 이해할 수 있도록 표현하고 전달되는 과정\n  + 복잡한 정보를 한 눈에 파악하고, 숨겨진 패턴이나 관계를 드러냄\n  + 탐색적 자료 분석(EDA), 결과 해석, 의사결정 등에 폭넓게 활용\n\n<br>\n\n+ 데이터 시각화 단계\n  1. 시각화 라이브러리 불러오기\n  2. x축, y축에 표시할 데이터 정하기\n  3. `plot()` 함수에 데이터 입력하기\n  4. 그래프 보여주기\n\n<br>\n\n## 5.2. Matplotlib\n### 5.2.1. 시각화 옵션\n+ Matplotlib\n  + 넘파이 배열을 기반으로 개발된 다중 플랫폼 데이터 시각화 라이브러리\n  + 다양한 운영체제와 그래픽 백엔드에서 안정적으로 작동함\n  + 일반적으로 Pandas의 데이터프레임과 함께 자주 사용됨\n\n<br>\n\n```{python}\n# Matplotlib 라이브러리 설치\n#!pip install matplotlib\n```\n\n```{python}\n# Matplotlib 라이브러리의 pylot 모듈 불러오기\nimport matplotlib.pyplot as plt\n```\n\n```{python}\nimport numpy as np\nimport pandas as pd\n```\n\n```{python}\n# 시각화 옵션1 : 제목\nplt.figure(figsize=(5, 3))\nplt.title('Line Graph')\nxdata = [3, 5, 7, 9]\nydata = [2, 4, 6, 8]\nplt.plot(xdata, ydata)\nplt.show()\n```\n\n```{python}\n# 시각화 옵션2 : 범례\n# plot()의 label 속성에 범례에 표시할 문자열을 작성\nplt.figure(figsize=(5, 3))\nplt.title('Legend properties')\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\nplt.plot(data1, label='Salary')\nplt.plot(data2, label='Prices')\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 시각화 옵션3 : 색상\n# plot()의 color 속성에 색상 설정\nplt.figure(figsize=(5, 3))\nplt.title('Color properties')\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\nplt.plot(xdata, ydata, color='green')\nplt.show()\n```\n\n```{python}\n# 시각화 옵션4 : x축 및 y축 이름\nplt.figure(figsize=(5, 3))\nplt.title('Axis name properties')\nxdata = [3, 5, 7, 9]\nydata = [1, 3, 5, 7]\nplt.plot(xdata, ydata)\nplt.xlabel('X value')\nplt.ylabel('Y value')\nplt.show()\n```\n\n```{python}\n# 시각화 옵션5 : 그래프 선 모양\n# plot()의 linestyle 속성에 선 모양을 '-', '--', '-.', ':' 등으로 설정\nplt.figure(figsize=(5, 3))\nplt.title('Line shape properties')\ndata1 = [1, 3, 5, 7]\ndata2 = [9, 7, 5, 3]\nplt.plot(data1, color='b', linestyle='--', label='dashed')\nplt.plot(data2, 'r:', label='dotted')\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 시각화 옵션6 : 그림 범위 지정\nplt.figure(figsize=(5, 3))\nplt.title('X, Y range properties')\nxdata = [15, 25, 35, 45]\nydata = [2, 4, 6, 8]\nplt.plot(xdata, ydata, 'b--o', markersize=7)\nplt.xlim(10, 50)\nplt.ylim(0, 10)\nplt.show()\n```\n\n```{python}\n#| scrolled: true\n# 시각화 옵션7 : 내장 시각화 옵션\n# Pandas 라이브러리의 plot() 메소드를 이용하여 그래프를 그릴 수 있음\nmy_score = [[60, 90, 95], [65, 85, 90], [80, 75, 100],\n            [95, 90, 85], [85, 80, 65]]\nsubject = ['1st', '2nd', '3rd']\ndf = pd.DataFrame(my_score, columns=subject)\n\n# 선 그래프\ndf.plot(kind='line', figsize=(5, 3))\n```\n\n```{python}\n# 상자수염 그래프\ndf.plot(kind='box', figsize=(5, 3))\n```\n\n```{python}\n# SciPy 라이브러리 설치\n#!pip install scipy\n```\n\n```{python}\n# 커널 밀도 그래프\ndf.plot(kind='kde', figsize=(5, 3))\n```\n\n<br>\n\n### 5.2.2. 선 그래프\n+ 일반적으로 시간에 따라 연속적으로 변화하는 데이터를 시각화할 때 사용함\n  + x축에는 시간, y축에는 수치형 변수를 지정함\n  + 시간의 흐름에 따라 데이터의 값은 증가/감소하는가?\n  + 계절에 따른 특정 패턴이 존재하는가? 눈에 띄는 변화 시점이 있는가?\n\n<br>\n\n+ \\[데이터\\] 에어코리아에서 제공하는 2015-2020년 연도별, 시도별, 미세먼지 등급별 일수\n  + 미세먼지 등급 : 0-30(좋음), 31-80(보통), 81-150(나쁨), 151 이상(매우 나쁨)\n  + \\[실습파일\\] [04_data1.csv](./data/04_data1.csv)\n\n<br>\n\n```{python}\n# 데이터 불러오기\ndata = pd.read_csv('./data/04_data1.csv', index_col='area')\ndata.head()\n```\n\n```{python}\n# '2015-2020년 미세먼지 좋음' 일수만 가져온 후, 행렬 전환(transpose)\ndata_good = data.copy()\ndata_good = data_good.iloc[:,0:6].T\ndata_good\n```\n\n```{python}\n# 인덱스를 연도로 수정\ndata_good.columns.name = 'year'\ndata_good.index = range(2015, 2021)\ndata_good\n```\n\n```{python}\n# 선 그래프1\nplt.figure(figsize=(8, 3))\nplt.plot(data_good['Nationwide'], color='b', marker='o')\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.title('2015-2020 Nationwide Fine Dust(PM10) - Good Days')\nplt.grid()\nplt.show()\n```\n\n```{python}\n# 선 그래프2\nplt.figure(figsize=(8, 3))\nfor area in ['Nationwide', 'Metropolitan', 'Jeonbuk']:\n    plt.plot(data_good[area], marker='o', label=area)\nplt.xlabel('Year')\nplt.ylabel('Count')\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Area')\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n<br>\n\n### 5.2.3. 막대 그래프\n+ 일반적으로 집단 간 비교나 범주형 변수를 시각화할 때 사용함\n+ 가독성 측면에서 항목의 개수가 적으면 가로 막대, 많으면 세로 막대가 편함\n\n<br>\n\n```{python}\n# '2015년 미세먼지 매우 나쁨' 일수만 가져오기\ndata2015_verybad = data.copy()\ndata2015_verybad = data2015_verybad['2015_verybad']\ndata2015_verybad\n```\n\n```{python}\n# 막대 그래프1\nplt.figure(figsize=(20, 5))\nplt.bar(data2015_verybad.index, data2015_verybad, color='g')\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.title('2015 Fine Dust(PM10) - Very Bad Days By Area')\nplt.show()\n```\n\n```{python}\n# 대도시의 '2015-2020년 미세먼지 좋음' 일수만 가져오기\ndata6 = data.copy()\ndata6 = data6.loc['Seoul':'Ulsan', '2015_good':'2020_good']\ndata6\n```\n\n```{python}\n# 막대 그래프2\nindex = np.arange(7)\n\nplt.figure(figsize=(20, 5))\nfor year in data6.columns:\n    plt.bar(index, data6[year], width=0.15, label=year)\n    index = index + 0.15\nplt.xlabel('Area')\nplt.ylabel('Count')\nplt.title('2015-2020 Fine Dust(PM10) - Good Days By Major City')\nplt.xticks(index-0.53, data6.index)\nplt.legend()\nplt.show()\n```\n\n```{python}\n# 대도시의 '2017-2020년 미세먼지 보통' 일수만 가져오기\ndata4 = data.copy()\ndata4 = data4.loc['Seoul':'Ulsan', '2017_common':'2020_common']\ndata4\n```\n\n```{python}\n# 막대 그래프3 : 누적 막대 그래프\nindex = np.arange(7)\nleft = np.zeros(len(data4))\n\nplt.figure(figsize=(8, 3))\nfor year in data4.columns:\n    plt.barh(index, data4[year], left=left, label=year.split(\"_\")[0])\n    left = left + data4[year]\nplt.xlim(0, 1000)\nplt.xlabel('Count')\nplt.ylabel('Area')\nplt.title('2017-2020 Fine Dust(PM10) - Common Days By Major City')\nplt.yticks(index, data4.index)\nplt.legend()\nplt.show()\n```\n\n<br>\n\n### 5.2.4. 산점도\n+ 서로 다른 두 수치형 변수 간 관계를 시각화할 때 사용함\n+ 데이터의 분포, 이상값, 변수 간 상관관계, 그룹화된 패턴 등을 직관적으로 파악할 수 있음\n\n<br>\n\n+ \\[데이터\\] 캐글에서 제공하는 붓꽃 데이터\n  + SepalLength(꽃받침 길이), SepalWidth(꽃받침 너비), PetalLength(꽃잎 길이), PetalWidth(꽃잎 너비), Species(품종)\n  + \\[실습파일\\] [04_data1.csv](./data/04_data1.csv)\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 290}\n# 데이터 불러오기\ndata = pd.read_csv('./data/04_data2.csv')\ndata.head()\n```\n\n```{python}\n# 산점도1\nplt.figure(figsize=(4, 4))\nplt.scatter(data['PetalLength'], data['PetalWidth'])\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.title('Iris Petal Scatter Plot')\nplt.show()\n```\n\n```{python}\n# 산점도2\nplt.figure(figsize=(4, 4))\nplt.scatter(data['PetalLength'], data['PetalWidth'],\n            c=data['Species'].map({'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}),\n            alpha = 0.5)\nplt.xlabel('Petal Length')\nplt.ylabel('Petal Width')\nplt.title('Iris Petal Scatter Plot')\nplt.show()\n```\n\n<br>\n\n### 5.2.5. 히스토그램\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 데이터를 일정한 구간(bin)으로 나누고, 각 구간에 속하는 값들의 빈도를 막대의 높이로 나타냄\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 290}\n# 히스토그램\nsetosa = data.loc[data['Species']=='setosa',]\n\nplt.figure(figsize=(5, 3))\nplt.hist(setosa['PetalLength'], bins=8, edgecolor='black')\nplt.xlabel('Petal')\nplt.ylabel('Length')\nplt.title('Iris Setosa Petal Length Histogram')\nplt.show()\n```\n\n<br>\n\n### 5.2.6. 상자수염 그래프\n+ 수치형 변수의 분포를 시각화할 때 사용함\n+ 다섯 숫자 요약값을 기반으로 이상값, 분포의 비대칭 여부 등을 직관적으로 파악할 수 있음\n\n<br>\n\n![](./images/fig2-4.jpg){width=40%}\n\n<br>\n\n```{python}\n# 상자수염 그래프\nplt.figure(figsize=(5, 3))\nplt.boxplot([data['SepalLength'], data['SepalWidth']],\n            tick_labels=['Sepal Length', 'Sepal Width'],\n            vert=False)\nplt.xlabel('Value')\nplt.ylabel('Sepal')\nplt.title('Iris Sepal Box Plot')\nplt.show()\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":2,"output-file":"2_3_matplotlib.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cerulean"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}