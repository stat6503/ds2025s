{"title":"8.1. 상관분석","markdown":{"yaml":{"jupyter":"python3"},"headingText":"8.1. 상관분석","containsRefs":false,"markdown":"\n\n<h1>8. 지도학습 : 회귀</h1>\n\n### 8.1.1. 상관계수\n+ 상관분석(correlation analysis)\n  + 두 수치형 변수 간 선형적인 관계(linear relationship)를 파악하는 통계 기법\n  + 상관계수(correlation coefficient)\n    + 두 변수 간 상관관계를 수치로 나타내어 정량화한 지표\n    + 상관계수의 절대값은 선형성의 강도를, 부호는 선형성의 방향성을 나타냄\n    + 변수의 측정 단위의 영향을 받지 않음\n\n<br>\n\n+ 상관계수의 성질\n  + 상관계수 r은 항상 -1에서 +1 사이의 값을 가짐\n  + 절대값이 1에 가까울수록 강한 상관관계를 의미함\n  + r>0이면 양의 상관관계, r<0이면 음의 상관관계, r=0이면 상관관계가 없음을 나타냄\n    + 양의 상관관계 : 한 변수가 증가할 때 다른 변수도 증가\n    + 음의 상관관계 : 한 변수가 증가할 때 다른 변수는 감소\n    + 상관관계 없음 : 한 변수가 증가할 때 다른 변수는 영향을 받지 않음\n\n<br>\n\n![](./images/fig3-7.jpg){width=70%}\n\n<br>\n\n### 8.1.2. (실습) 행복지수 데이터 분석\n+ \\[데이터\\] 캐글에서 제공하는 전세계 행복지수 데이터\n  + 1인당 GDP, 사회적 지지 정도, 건강한 기대수명, 인생 선택의 자유, 기부\n  + \\[실습파일\\] [2020.csv](./data/2020.csv), [2021.csv](./data/2021.csv)\n\n<br>\n\n> **행복지수와 관련된 요인은 무엇일까?**\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n# 라이브러리 불러오기\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n\n```{python}\n# 데이터 불러오기\ndf2020 = pd.read_csv('./data/2020.csv', index_col=0)\ndf2021 = pd.read_csv('./data/2021.csv', index_col=0)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 열 정보\ndf2020.dtypes\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 238}\n# 2020년 데이터 확인\ndf2020.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 238}\n# 2021년 데이터 확인\ndf2021.head()\n```\n\n```{python}\n# 데이터 전처리 : 열 삭제\ndf2020.drop(['upperwhisker', 'lowerwhisker', 'Dystopia'], axis=1, inplace=True)\ndf2021.drop(['upperwhisker', 'lowerwhisker', 'Dystopia'], axis=1, inplace=True)\n```\n\n```{python}\n# 열 이름 변경 : 공백을 _으로 대체\n#df2020.columns = df2020.columns.str.replace(' ','._')\n#df2021.columns = df2021.columns.str.replace(' ','_')\n```\n\n```{python}\n# 데이터 전처리 : 열 이름 변경\ndf2020.columns = ['Country', 'Score', 'GDP_per_capita', 'Social_support', 'Life_expectancy', 'Freedom', 'Generosity']\ndf2021.columns = ['Country', 'Score', 'GDP_per_capita', 'Social_support', 'Life_expectancy', 'Freedom', 'Generosity']\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n## (2-1) 행복 점수와 기능의 상관관계\n##       한 국가의 행복지수와 경제적(GDP), 법적 상태(Freedom)는 상관관계가 있는가?\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 455}\n# 2020년 데이터 전처리\ndf1 = df2020.copy()\ndf1.drop(['Social_support', 'Life_expectancy', 'Generosity'], axis=1, inplace=True)\ndf1.head()\n```\n\n```{python}\n# 산점도 : 2020년 데이터\nsns.pairplot(df1, height=2)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 상관계수 : 2020년 데이터\n# 행복지수와 GDP 간 상관계수는 0.78로, 강한 양의 상관관계임\n# 행복지수와 Freedom 간 상관계수는 0.59로, 뚜렷한 양의 상관관계임\ncorr = df1.select_dtypes(include='number').corr()\ncorr['Score'].sort_values(ascending=False)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2020년 데이터\nplt.figure(figsize=(6, 4))\nsns.heatmap(corr, annot=True, cmap='Blues')\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 455}\n# 2021년 데이터 전처리\ndf2 = df2021.copy()\ndf2.drop(['Social_support', 'Life_expectancy', 'Generosity'], axis=1, inplace=True)\ndf2.head()\n```\n\n```{python}\n# 산점도 : 2021년 데이터\nsns.pairplot(df2, height=2, diag_kind='kde')\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2021년 데이터\n# 행복지수와 GDP 간 상관계수는 0.79로, 강한 양의 상관관계임\n# 헹복지수와 Freedom 간 상관계수는 0.61로, 뚜렷한 양의 상관관계임\nplt.figure(figsize=(6, 4))\nsns.heatmap(df2.select_dtypes(include='number').corr(), annot=True, cmap='PuBuGn')\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 행복지수와 GDP 간 관계는?\n  + 상관계수는 2020년 0.78, 2021년 0.79로, 강한 양의 상관관계로 나타남\n  + 경제 성장은 일반적으로 더 높은 소득과 향상된 생활 수준으로 이어지므로, 국민의 행복 수준도 높아지는 경향이 있음\n  + 따라서 국민의 행복을 보장하기 위해, 국가의 GDP를 주요 우선순위로 고려할 필요가 있음\n\n<br>\n\n+ 행복지수와 인생 선택의 자유 간 관계는?\n  + 상관계수는 2020년 0.59, 2021년 0.61로, 뚜렷한 양의 상관관계로 나타남\n  + 자유에 대한 인식은 지역과 문화에 따라 다양하기 때문에 일반화하기는 어려움\n  + 그럼에도 불구하고, 개인이 삶을 선택할 자유를 얼마나 느끼는지는 국민의 행복 수준에 중요한 영향을 미침\n\n<br>\n\n```{python}\n## (2-2) 행복 점수와 사회적 상태의 상관관계\n##       한 국가의 행복지수와 사회적 상태(Social.support)는 상관관계가 있는가?\n```\n\n```{python}\n# 데이터 전처리\nx1 = df2020[['Generosity', 'Social_support', 'Score']].copy()\nx2 = df2021[['Generosity', 'Social_support', 'Score']].copy()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2020년 데이터\na1 = x1.corr()\nplt.figure(figsize=(6, 4))\nsns.heatmap(a1, annot=True)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2021년 데이터\na2 = x2.corr()\nplt.figure(figsize=(6, 4))\nsns.heatmap(a2, annot=True, cmap='GnBu')\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 행복지수와 사회적 지지 간 관계는?\n  + 상관계수는 2020년 0.77, 2021년 0.76으로, 강한 양의 상관관계로 나타남\n  + 사회적 지지는 가족, 친구, 지인 등과 함께 있으면서 느끼는 정서적 지원에 대한 인식을 의미함\n  + 일상 생활에서 가깝게 지내는 사람들과의 관계에서 형성되므로, 사회적 지지는 행복 수준에 중요한 요소임을 알 수 있음\n\n<br>\n\n+ 행복지수와 기부 문화 간 관계는?\n  + 상관계수는 2020년 0.069, 2021년 -0.018로, 상관관계가 거의 없는 것으로 나타남\n  + 따라서 기부 문화가 행복 수준과 직접적인 관련이 거의 없음을 확인할 수 있음\n\n<br>\n\n```{python}\n## (2-3) 행복 점수와 전체 변수의 상관관계\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 580}\n# 상관분석 : 2020년 데이터\ncorr = df2020.select_dtypes(include='number').corr()\n\nplt.figure(figsize=(8, 6))\nupp_mat = np.triu(corr)\nsns.heatmap(corr, mask=upp_mat,vmin=-1, vmax=1, annot=True, cmap ='RdYlBu_r', linewidths=4)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 580}\n# 상관분석 : 2021년 데이터\ncorr = df2021.select_dtypes(include='number').corr()\n\nplt.figure(figsize=(8, 6))\nupp_mat = np.triu(corr)\nsns.heatmap(corr, mask=upp_mat, vmin=-1, vmax=1,annot = True, cmap ='PiYG', linewidths=4)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 2021년 행복지수에 가장 큰 영향을 미치는 요인은 경제적 여유(GDP, 0.79), 건강(0.77), 사회적 지지(0.76), 선택에 대한 자유도(0.61) 순으로 나타남\n+ 기부 활동과 행복지수는 뚜렷한 관련이 없는 것으로 나타남\n+ 1인당 GDP와 건강한 기대수명은 강한 양의 상관관계(0.86)가 있으므로, 경제적으로 여유로운 사람들이 더 건강하게 사는 경향이 있음을 알 수 있음\n\n<br>\n\n<br>\n\n## 8.2. 단순선형 회귀분석\n+ 회귀(regression)\n  + 지도학습의 한 종류로, 정답(label)이 수치형 변수일 때 사용됨\n  + 하나 이상의 독립변수(x)가 종속변수(y)에 미치는 영향력의 크기를 수학적 관계식(모델)으로 추정하는 통계 기법\n    + 독립변수(independent variable) : 다른 변수의 변화를 야기하는 변수\n    + 종속변수(dependent variable) : 다른 변수의 영향으로 변화하는 변수\n  + 학습된 모델은 새로운 독립변수 값에 대해 종속변수의 값을 예측할 수 있음\n  + 독립변수 개수에 따른 구분\n    + 단순선형 회귀(simple linear regression) : 독립변수가 1개인 경우\n    + 다중선형 회귀(multiple linear regression) : 독립변수가 2개 이상인 경우\n\n<br>\n\n+ 회귀모델 평가지표\n\n|지표|설명|\n|:---------:|:------------------------------|\n|MSE(Mean Squared Error)|- 평균제곱오차로, 작을수록 좋음|\n|RMSE(Root Mean Squared Error)|- MSE의 양의 제곱근으로, 작을수록 좋음<br> -단위가 데이터와 동일하여 해석이 용이함|\n|MAE(Mean Absolute Error)|- 평균절대오차로, 작을수록 좋음 <br>- 이상값에 덜 민감함|\n|$R^2$ (결정계수)|- 모델이 데이터의 변동을 얼마나 잘 설명하는지 나타내는 지표 <br>- 0~1 사이의 값을 가지며, 1에 가까울수록 모델의 설명력이 높음|\n\n<br>\n\n+ 단순선형 회귀분석\n  + 하나의 독립변수가 종속변수에 미치는 영향을 분석하는 통계 기법\n    + 예 : 공부 시간(독립변수)에 따른 시험 성적(종속변수)의 변화\n  + 단순선형 회귀모델\n      $$y = \\beta_0 + \\beta_1x + \\epsilon$$\n    + $\\beta_0$ : 절편(intercept)\n    + $\\beta_1$ : 기울기(slope)\n    + $\\epsilon$ : 오차(error)\n  + 회귀분석의 목적은 주어진 데이터를 가장 잘 설명하는 회귀선을 찾는 것\n    + 일반적으로 오차의 제곱합을 최소화하는 최소제곱추정법(OLS)을 사용함\n    $$\\hat{y} = b_0 + b_1x$$\n  + 잔차(residual) : 관측값과 예측값의 차이, $y-\\hat{y}$\n\n<br>\n\n![](./images/fig3-8.jpg)\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 한글 깨짐 현상에 대한 해결 방법\nimport matplotlib as mpl\nplt.rc('font', family='Malgun Gothic')\nmpl.rcParams['axes.unicode_minus'] = False\n```\n\n```{python}\n# scikit-learn 설치하기\n#!pip install scikit-learn\n```\n\n```{python}\n# scikit-learn의 linear_model 모듈에서 LinearRegression 클래스 불러오기\nfrom sklearn.linear_model import LinearRegression\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 284}\n## 공부 시간(독립변수)에 따른 시험 성적(종속변수)의 변화\n# 데이터프레임 생성\ndata = pd.DataFrame({\n    'study_time': [2, 4, 6, 8, 10],\n    'score': [81, 93, 90, 97, 100]\n})\n\n# 산점도 : 두 변수 간 상관관계 확인\nplt.figure(figsize=(5, 3))\nplt.scatter(data['study_time'], data['score'])\nplt.xlabel('Study Time (hours)')\nplt.ylabel('Score')\nplt.show()\n\n# 독립변수, 종속변수 분리\n# scikit-Learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nX = data[['study_time']]\ny = data['score']\n\n# 선형 회귀모형 객체 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# 7시간 공부했을 때, 시험 점수 예측\nnewdata = pd.DataFrame({'study_time': [7]})\ny_pred = model.predict(newdata)\nprint(f'7시간 공부했을 때, 시험 점수 예측값 : {y_pred[0]}')\n```\n\n<br>\n\n## 8.3. (실습) 날씨 데이터 분석\n+ \\[데이터\\] 기상자료개방포털에서 제공하는 서울특별시의 기상 관측 데이터\n  + 2010년 1월 ~ 2020년 12월\n  + 날짜, 지점, 평균기온(℃), 최저기온(℃), 최고기온(℃)\n  + \\[실습파일\\] [(2010-2020)_weather.csv](./data/(2010-2020)_weather.csv)\n\n<br>\n\n> **2021년 8월 15일의 평균기온을 예측하면?**\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 불러오기\nseoul = pd.read_csv('./data/(2010-2020)_weather.csv', encoding='cp949')\nseoul.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 정보\nseoul.info()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 전처리 : 열 삭제\nseoul.drop('지점', axis=1, inplace=True)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 전처리 : 열 이름 변경\nseoul.columns = ['날짜', '평균기온', '최저기온', '최고기온']\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 전처리 : 결측값 확인\nseoul.isna().sum()\n```\n\n```{python}\n# 데이터 전처리 : 결측값이 포함된 행 삭제\nseoul.dropna(axis=0, inplace=True)\n```\n\n```{python}\n# 데이터 전처리 : 날짜 변수를 datetime 형식으로 변환\nseoul['날짜'] = pd.to_datetime(seoul['날짜'])\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 전처리 : 새로운 변수(연도, 월, 일) 생성\nseoul['연도'] = seoul['날짜'].dt.year\nseoul['월']=seoul['날짜'].dt.month\nseoul['일']=seoul['날짜'].dt.day\nseoul.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 394}\n# 데이터 전처리 : 8월 15일 데이터 선택\nconditions = (seoul['월']==8) & (seoul['일']==15)\nseoul0815 = seoul[conditions]\nseoul0815\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 300}\n# 요약 통계량\nseoul.describe()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 444}\n# 산점도 : 연도에 따른 평균기온 변화\n# 독립변수, 종속변수 분리\n# scikit-learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nX = seoul0815[['연도']]\ny = seoul0815['평균기온']\n\nfig = plt.figure(figsize=(5, 3))\nplt.scatter(X, y)\nplt.xlabel('연도')\nplt.ylabel('평균기온')\nplt.show()\n```\n\n```{python}\n# 상관계수 : 연도와 평균기온의 상관관계\n# 연도와 평균기온은 약한 양의 상관관계로 나타나, 단순선형 회귀모형을 적합할 수 있음\nseoul0815[['연도', '평균기온']].corr()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 단순선형 회귀분석 : 2021년 8월 15일 평균기온 예측\n# 선형 회귀모델 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# 회귀식의 절편 및 기울기\nintercept = model.intercept_\nslope = model.coef_\nprint(f'회귀식: hat(y) = {model.intercept_:.2f} + {model.coef_[0]:.2f}*x')\n\n# 결정계수\nR2 = model.score(X, y)\nprint(f'결정계수 : {R2:.3f}')\n\n# 2021년일 때, 평균기온 예측\nnewdata = pd.DataFrame({'연도': [2022]})\ny_pred = model.predict(newdata)\nprint(f'2021년 8월 15일 평균기온 예측값 : {y_pred[0]:.2f}')\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 444}\n# 산점도와 단순선형 회귀선\nfig = plt.figure(figsize=(5, 3))   \nsns.regplot(x='연도', y='평균기온', data=seoul0815)\nplt.grid()\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 연도와 평균기온은 약한 양의 상관관계(r=0.195)로 나타나, 단순선형 회귀모형을 적합할 수 있음\n+ 독립변수는 연도, 종속변수는 평균기온으로 단순선형 회귀분석을 실시한 결과, 모형의 설명력은 3.8%로 비교적 낮게 나타남\n+ 적합된 회귀식 : $\\hat{y} = -297.85 + 0.16*x$\n  + 연도가 1년 증가할수록 8월 15일의 평균기온은 약 0.16℃ 상승하는 것으로 추정됨\n+ 따라서 2021년 8월 15일의 평균기온은 27.51℃로 예측됨\n\n<br>\n\n<br>\n\n## 8.4. 다중선형 회귀분석\n+ 다중선형 회귀분석\n  + 두 개 이상의 독립변수가 종속변수에 미치는 영향을 분석하는 통계 기법\n    + 예: 공부 시간, 수면 시간, 강의 출석률(독립변수들)에 따른 시험 성적(종속변수)의 변화\n  + 다중선형 회귀모델\n    $$y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + \\cdots + \\beta_p x_p + \\epsilon$$\n    + $\\beta_0$ : 절편(intercept)  \n    + $\\beta_1, \\beta_2, \\dots, \\beta_p$ : 각 독립변수의 기울기(slope)\n    + $\\epsilon$ : 오차(error)\n\n<br>\n\n## 8.5. (실습) 캘리포니아 주택 가격 분석\n+ \\[데이터\\] scikit-learn에서 제공하는 캘리포니아 주택 가격 데이터\n  + 1990년대 캘리포니아 지역의 주택 가격에 대한 데이터\n  + 총 20,640개의 관측값과 8개의 독립변수(feature), 1개의 종속변수(target)으로 구성됨\n  + `as_frame=True` 옵션을 사용하면 독립변수와 종속변수를 DataFrame 형태로 불러올 수 있음\n  + `as_frame=False` 옵션(기본값)을 사용하면 독립변수와 종속변수를 각각 넘파이 배열 형태로 별도로 제공함\n\n<br>\n\n|변수|설명|\n|:------|:------------------------------|\n|MedInc|지역 중위 소득 (10,000 USD)|\n|HouseAge|주택 연식 (건축 후 경과된 연도 수)|\n|AveRooms|가구당 평균 방 개수|\n|AveBedrms|가구당 평균 침실 개수|\n|Population|지역 내 인구 수|\n|AveOccup|가구당 평균 거주 인원 수|\n|Latitude|위도|\n|Longitude|경도|\n|MedHouseVal|주택 중위 가격 (100,000 USD)|\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n# 데이터 불러오기\nfrom sklearn.datasets import fetch_california_housing\ndata = fetch_california_housing(as_frame=True)\ndf = data.frame\ndf.head()\n```\n\n```{python}\n# 데이터 정보\ndf.info()\n```\n\n```{python}\n# 데이터 전처리 : 결측값 확인\ndf.isna().sum()\n```\n\n```{python}\n# 데이터 전처리 : 훈련 데이터와 평가 데이터로 분할 (7:3 비율)\ncalifornia = fetch_california_housing()\nX = california.data\ny = california.target\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n```\n\n```{python}\n#| scrolled: true\n# 요약 통계량 확인\ndf_train = pd.DataFrame(data=X_train, columns=california.feature_names)\ndf_train['MedHouseVal'] = y_train\ndf_train.describe()\n```\n\n```{python}\n# 산점도\nsns.pairplot(df_train, height=10.8, plot_kws={'s': 10}, diag_kind='kde')\nplt.show()\n```\n\n```{python}\n# 상관분석\ncorr_train = df_train.corr()\nupp_mat = np.triu(corr_train)\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(corr_train, annot=True, mask=upp_mat, cmap='BrBG', vmin=-1, vmax=1)\nplt.title('Correlation Matrix')\nplt.show()\n```\n\n```{python}\n# 상관관계가 강한 독립변수 선택\n# scikit-learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nfeatures = ['MedInc', 'HouseAge', 'AveRooms', 'Latitude']\ntarget = 'MedHouseVal'\n\nX_train = df_train[features]\ny_train = df_train[target]\n```\n\n```{python}\n# 평가 데이터에서도 훈련 데이터에서 사용한 독립변수만 선택\ndf_test = pd.DataFrame(data=X_test, columns=california.feature_names)\ndf_test['MedHouseVal'] = y_test\nX_test = df_test[features]\n```\n\n```{python}\n#| scrolled: true\n# 선형 회귀모델 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# 회귀모델 평가 : 결정계수, MSE\nfrom sklearn.metrics import mean_squared_error, r2_score\ny_pred = model.predict(X_test)\nR2 = r2_score(y_test, y_pred)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\n\nprint(f\"결정계수 : {R2:.3f}\")\nprint(f\"RMSE : {RMSE:.3f}\")\n```\n\n```{python}\n# 회귀계수\ndf_coef = pd.DataFrame({'Feature': features, 'Coefficient': model.coef_})\nprint(df_coef)\n```\n\n```{python}\n# statsmodels 라이브러리 설치\n#!pip install statsmodels\n```\n\n```{python}\n# [참고] 회귀계수의 유의성\nimport statsmodels.api as sm\n\nX_train_const = sm.add_constant(X_train)\nols_model = sm.OLS(y_train, X_train_const).fit()\nprint(ols_model.summary())\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 결정계수 $R^2$은 52.0%로 나타남\n+ RMSE는 0.630으로, 주택 중위 가격의 실제값과 예측값이 평균적으로 약 6만 달러 차이가 있다는 것을 의미함\n+ 훈련 데이터에서 주택 중위 가격의 평균은 약 20만 달러인 점을 고려하면, 모델의 평균 오차는 약 30% 수준임을 알 수 있음\n+ 따라서 평균 오차가 비교적 큰 편이므로, 모델 성능 개선이 필요한 것으로 판단됨\n+ 회귀계수를 살펴보면 지역 중위 소득, 주택 연식이 증가할수록 주택 중위 가격은 높아지며, 가구당 평균 거주 인원 수, 위도가 증가할수록 주택 중위 가격은 낮아지는 것으로 나타남\n\n","srcMarkdownNoYaml":"\n\n<h1>8. 지도학습 : 회귀</h1>\n\n## 8.1. 상관분석\n### 8.1.1. 상관계수\n+ 상관분석(correlation analysis)\n  + 두 수치형 변수 간 선형적인 관계(linear relationship)를 파악하는 통계 기법\n  + 상관계수(correlation coefficient)\n    + 두 변수 간 상관관계를 수치로 나타내어 정량화한 지표\n    + 상관계수의 절대값은 선형성의 강도를, 부호는 선형성의 방향성을 나타냄\n    + 변수의 측정 단위의 영향을 받지 않음\n\n<br>\n\n+ 상관계수의 성질\n  + 상관계수 r은 항상 -1에서 +1 사이의 값을 가짐\n  + 절대값이 1에 가까울수록 강한 상관관계를 의미함\n  + r>0이면 양의 상관관계, r<0이면 음의 상관관계, r=0이면 상관관계가 없음을 나타냄\n    + 양의 상관관계 : 한 변수가 증가할 때 다른 변수도 증가\n    + 음의 상관관계 : 한 변수가 증가할 때 다른 변수는 감소\n    + 상관관계 없음 : 한 변수가 증가할 때 다른 변수는 영향을 받지 않음\n\n<br>\n\n![](./images/fig3-7.jpg){width=70%}\n\n<br>\n\n### 8.1.2. (실습) 행복지수 데이터 분석\n+ \\[데이터\\] 캐글에서 제공하는 전세계 행복지수 데이터\n  + 1인당 GDP, 사회적 지지 정도, 건강한 기대수명, 인생 선택의 자유, 기부\n  + \\[실습파일\\] [2020.csv](./data/2020.csv), [2021.csv](./data/2021.csv)\n\n<br>\n\n> **행복지수와 관련된 요인은 무엇일까?**\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n# 라이브러리 불러오기\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n\n```{python}\n# 데이터 불러오기\ndf2020 = pd.read_csv('./data/2020.csv', index_col=0)\ndf2021 = pd.read_csv('./data/2021.csv', index_col=0)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 열 정보\ndf2020.dtypes\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 238}\n# 2020년 데이터 확인\ndf2020.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 238}\n# 2021년 데이터 확인\ndf2021.head()\n```\n\n```{python}\n# 데이터 전처리 : 열 삭제\ndf2020.drop(['upperwhisker', 'lowerwhisker', 'Dystopia'], axis=1, inplace=True)\ndf2021.drop(['upperwhisker', 'lowerwhisker', 'Dystopia'], axis=1, inplace=True)\n```\n\n```{python}\n# 열 이름 변경 : 공백을 _으로 대체\n#df2020.columns = df2020.columns.str.replace(' ','._')\n#df2021.columns = df2021.columns.str.replace(' ','_')\n```\n\n```{python}\n# 데이터 전처리 : 열 이름 변경\ndf2020.columns = ['Country', 'Score', 'GDP_per_capita', 'Social_support', 'Life_expectancy', 'Freedom', 'Generosity']\ndf2021.columns = ['Country', 'Score', 'GDP_per_capita', 'Social_support', 'Life_expectancy', 'Freedom', 'Generosity']\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n## (2-1) 행복 점수와 기능의 상관관계\n##       한 국가의 행복지수와 경제적(GDP), 법적 상태(Freedom)는 상관관계가 있는가?\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 455}\n# 2020년 데이터 전처리\ndf1 = df2020.copy()\ndf1.drop(['Social_support', 'Life_expectancy', 'Generosity'], axis=1, inplace=True)\ndf1.head()\n```\n\n```{python}\n# 산점도 : 2020년 데이터\nsns.pairplot(df1, height=2)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 상관계수 : 2020년 데이터\n# 행복지수와 GDP 간 상관계수는 0.78로, 강한 양의 상관관계임\n# 행복지수와 Freedom 간 상관계수는 0.59로, 뚜렷한 양의 상관관계임\ncorr = df1.select_dtypes(include='number').corr()\ncorr['Score'].sort_values(ascending=False)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2020년 데이터\nplt.figure(figsize=(6, 4))\nsns.heatmap(corr, annot=True, cmap='Blues')\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 455}\n# 2021년 데이터 전처리\ndf2 = df2021.copy()\ndf2.drop(['Social_support', 'Life_expectancy', 'Generosity'], axis=1, inplace=True)\ndf2.head()\n```\n\n```{python}\n# 산점도 : 2021년 데이터\nsns.pairplot(df2, height=2, diag_kind='kde')\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2021년 데이터\n# 행복지수와 GDP 간 상관계수는 0.79로, 강한 양의 상관관계임\n# 헹복지수와 Freedom 간 상관계수는 0.61로, 뚜렷한 양의 상관관계임\nplt.figure(figsize=(6, 4))\nsns.heatmap(df2.select_dtypes(include='number').corr(), annot=True, cmap='PuBuGn')\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 행복지수와 GDP 간 관계는?\n  + 상관계수는 2020년 0.78, 2021년 0.79로, 강한 양의 상관관계로 나타남\n  + 경제 성장은 일반적으로 더 높은 소득과 향상된 생활 수준으로 이어지므로, 국민의 행복 수준도 높아지는 경향이 있음\n  + 따라서 국민의 행복을 보장하기 위해, 국가의 GDP를 주요 우선순위로 고려할 필요가 있음\n\n<br>\n\n+ 행복지수와 인생 선택의 자유 간 관계는?\n  + 상관계수는 2020년 0.59, 2021년 0.61로, 뚜렷한 양의 상관관계로 나타남\n  + 자유에 대한 인식은 지역과 문화에 따라 다양하기 때문에 일반화하기는 어려움\n  + 그럼에도 불구하고, 개인이 삶을 선택할 자유를 얼마나 느끼는지는 국민의 행복 수준에 중요한 영향을 미침\n\n<br>\n\n```{python}\n## (2-2) 행복 점수와 사회적 상태의 상관관계\n##       한 국가의 행복지수와 사회적 상태(Social.support)는 상관관계가 있는가?\n```\n\n```{python}\n# 데이터 전처리\nx1 = df2020[['Generosity', 'Social_support', 'Score']].copy()\nx2 = df2021[['Generosity', 'Social_support', 'Score']].copy()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2020년 데이터\na1 = x1.corr()\nplt.figure(figsize=(6, 4))\nsns.heatmap(a1, annot=True)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 396}\n# 상관분석 : 2021년 데이터\na2 = x2.corr()\nplt.figure(figsize=(6, 4))\nsns.heatmap(a2, annot=True, cmap='GnBu')\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 행복지수와 사회적 지지 간 관계는?\n  + 상관계수는 2020년 0.77, 2021년 0.76으로, 강한 양의 상관관계로 나타남\n  + 사회적 지지는 가족, 친구, 지인 등과 함께 있으면서 느끼는 정서적 지원에 대한 인식을 의미함\n  + 일상 생활에서 가깝게 지내는 사람들과의 관계에서 형성되므로, 사회적 지지는 행복 수준에 중요한 요소임을 알 수 있음\n\n<br>\n\n+ 행복지수와 기부 문화 간 관계는?\n  + 상관계수는 2020년 0.069, 2021년 -0.018로, 상관관계가 거의 없는 것으로 나타남\n  + 따라서 기부 문화가 행복 수준과 직접적인 관련이 거의 없음을 확인할 수 있음\n\n<br>\n\n```{python}\n## (2-3) 행복 점수와 전체 변수의 상관관계\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 580}\n# 상관분석 : 2020년 데이터\ncorr = df2020.select_dtypes(include='number').corr()\n\nplt.figure(figsize=(8, 6))\nupp_mat = np.triu(corr)\nsns.heatmap(corr, mask=upp_mat,vmin=-1, vmax=1, annot=True, cmap ='RdYlBu_r', linewidths=4)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 580}\n# 상관분석 : 2021년 데이터\ncorr = df2021.select_dtypes(include='number').corr()\n\nplt.figure(figsize=(8, 6))\nupp_mat = np.triu(corr)\nsns.heatmap(corr, mask=upp_mat, vmin=-1, vmax=1,annot = True, cmap ='PiYG', linewidths=4)\nplt.xticks(rotation=45)\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 2021년 행복지수에 가장 큰 영향을 미치는 요인은 경제적 여유(GDP, 0.79), 건강(0.77), 사회적 지지(0.76), 선택에 대한 자유도(0.61) 순으로 나타남\n+ 기부 활동과 행복지수는 뚜렷한 관련이 없는 것으로 나타남\n+ 1인당 GDP와 건강한 기대수명은 강한 양의 상관관계(0.86)가 있으므로, 경제적으로 여유로운 사람들이 더 건강하게 사는 경향이 있음을 알 수 있음\n\n<br>\n\n<br>\n\n## 8.2. 단순선형 회귀분석\n+ 회귀(regression)\n  + 지도학습의 한 종류로, 정답(label)이 수치형 변수일 때 사용됨\n  + 하나 이상의 독립변수(x)가 종속변수(y)에 미치는 영향력의 크기를 수학적 관계식(모델)으로 추정하는 통계 기법\n    + 독립변수(independent variable) : 다른 변수의 변화를 야기하는 변수\n    + 종속변수(dependent variable) : 다른 변수의 영향으로 변화하는 변수\n  + 학습된 모델은 새로운 독립변수 값에 대해 종속변수의 값을 예측할 수 있음\n  + 독립변수 개수에 따른 구분\n    + 단순선형 회귀(simple linear regression) : 독립변수가 1개인 경우\n    + 다중선형 회귀(multiple linear regression) : 독립변수가 2개 이상인 경우\n\n<br>\n\n+ 회귀모델 평가지표\n\n|지표|설명|\n|:---------:|:------------------------------|\n|MSE(Mean Squared Error)|- 평균제곱오차로, 작을수록 좋음|\n|RMSE(Root Mean Squared Error)|- MSE의 양의 제곱근으로, 작을수록 좋음<br> -단위가 데이터와 동일하여 해석이 용이함|\n|MAE(Mean Absolute Error)|- 평균절대오차로, 작을수록 좋음 <br>- 이상값에 덜 민감함|\n|$R^2$ (결정계수)|- 모델이 데이터의 변동을 얼마나 잘 설명하는지 나타내는 지표 <br>- 0~1 사이의 값을 가지며, 1에 가까울수록 모델의 설명력이 높음|\n\n<br>\n\n+ 단순선형 회귀분석\n  + 하나의 독립변수가 종속변수에 미치는 영향을 분석하는 통계 기법\n    + 예 : 공부 시간(독립변수)에 따른 시험 성적(종속변수)의 변화\n  + 단순선형 회귀모델\n      $$y = \\beta_0 + \\beta_1x + \\epsilon$$\n    + $\\beta_0$ : 절편(intercept)\n    + $\\beta_1$ : 기울기(slope)\n    + $\\epsilon$ : 오차(error)\n  + 회귀분석의 목적은 주어진 데이터를 가장 잘 설명하는 회귀선을 찾는 것\n    + 일반적으로 오차의 제곱합을 최소화하는 최소제곱추정법(OLS)을 사용함\n    $$\\hat{y} = b_0 + b_1x$$\n  + 잔차(residual) : 관측값과 예측값의 차이, $y-\\hat{y}$\n\n<br>\n\n![](./images/fig3-8.jpg)\n\n<br>\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 한글 깨짐 현상에 대한 해결 방법\nimport matplotlib as mpl\nplt.rc('font', family='Malgun Gothic')\nmpl.rcParams['axes.unicode_minus'] = False\n```\n\n```{python}\n# scikit-learn 설치하기\n#!pip install scikit-learn\n```\n\n```{python}\n# scikit-learn의 linear_model 모듈에서 LinearRegression 클래스 불러오기\nfrom sklearn.linear_model import LinearRegression\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 284}\n## 공부 시간(독립변수)에 따른 시험 성적(종속변수)의 변화\n# 데이터프레임 생성\ndata = pd.DataFrame({\n    'study_time': [2, 4, 6, 8, 10],\n    'score': [81, 93, 90, 97, 100]\n})\n\n# 산점도 : 두 변수 간 상관관계 확인\nplt.figure(figsize=(5, 3))\nplt.scatter(data['study_time'], data['score'])\nplt.xlabel('Study Time (hours)')\nplt.ylabel('Score')\nplt.show()\n\n# 독립변수, 종속변수 분리\n# scikit-Learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nX = data[['study_time']]\ny = data['score']\n\n# 선형 회귀모형 객체 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# 7시간 공부했을 때, 시험 점수 예측\nnewdata = pd.DataFrame({'study_time': [7]})\ny_pred = model.predict(newdata)\nprint(f'7시간 공부했을 때, 시험 점수 예측값 : {y_pred[0]}')\n```\n\n<br>\n\n## 8.3. (실습) 날씨 데이터 분석\n+ \\[데이터\\] 기상자료개방포털에서 제공하는 서울특별시의 기상 관측 데이터\n  + 2010년 1월 ~ 2020년 12월\n  + 날짜, 지점, 평균기온(℃), 최저기온(℃), 최고기온(℃)\n  + \\[실습파일\\] [(2010-2020)_weather.csv](./data/(2010-2020)_weather.csv)\n\n<br>\n\n> **2021년 8월 15일의 평균기온을 예측하면?**\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 불러오기\nseoul = pd.read_csv('./data/(2010-2020)_weather.csv', encoding='cp949')\nseoul.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 정보\nseoul.info()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 전처리 : 열 삭제\nseoul.drop('지점', axis=1, inplace=True)\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 전처리 : 열 이름 변경\nseoul.columns = ['날짜', '평균기온', '최저기온', '최고기온']\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 데이터 전처리 : 결측값 확인\nseoul.isna().sum()\n```\n\n```{python}\n# 데이터 전처리 : 결측값이 포함된 행 삭제\nseoul.dropna(axis=0, inplace=True)\n```\n\n```{python}\n# 데이터 전처리 : 날짜 변수를 datetime 형식으로 변환\nseoul['날짜'] = pd.to_datetime(seoul['날짜'])\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 206}\n# 데이터 전처리 : 새로운 변수(연도, 월, 일) 생성\nseoul['연도'] = seoul['날짜'].dt.year\nseoul['월']=seoul['날짜'].dt.month\nseoul['일']=seoul['날짜'].dt.day\nseoul.head()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 394}\n# 데이터 전처리 : 8월 15일 데이터 선택\nconditions = (seoul['월']==8) & (seoul['일']==15)\nseoul0815 = seoul[conditions]\nseoul0815\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 300}\n# 요약 통계량\nseoul.describe()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 444}\n# 산점도 : 연도에 따른 평균기온 변화\n# 독립변수, 종속변수 분리\n# scikit-learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nX = seoul0815[['연도']]\ny = seoul0815['평균기온']\n\nfig = plt.figure(figsize=(5, 3))\nplt.scatter(X, y)\nplt.xlabel('연도')\nplt.ylabel('평균기온')\nplt.show()\n```\n\n```{python}\n# 상관계수 : 연도와 평균기온의 상관관계\n# 연도와 평균기온은 약한 양의 상관관계로 나타나, 단순선형 회귀모형을 적합할 수 있음\nseoul0815[['연도', '평균기온']].corr()\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/}\n# 단순선형 회귀분석 : 2021년 8월 15일 평균기온 예측\n# 선형 회귀모델 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# 회귀식의 절편 및 기울기\nintercept = model.intercept_\nslope = model.coef_\nprint(f'회귀식: hat(y) = {model.intercept_:.2f} + {model.coef_[0]:.2f}*x')\n\n# 결정계수\nR2 = model.score(X, y)\nprint(f'결정계수 : {R2:.3f}')\n\n# 2021년일 때, 평균기온 예측\nnewdata = pd.DataFrame({'연도': [2022]})\ny_pred = model.predict(newdata)\nprint(f'2021년 8월 15일 평균기온 예측값 : {y_pred[0]:.2f}')\n```\n\n```{python}\n#| colab: {base_uri: https://localhost:8080/, height: 444}\n# 산점도와 단순선형 회귀선\nfig = plt.figure(figsize=(5, 3))   \nsns.regplot(x='연도', y='평균기온', data=seoul0815)\nplt.grid()\nplt.show()\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 연도와 평균기온은 약한 양의 상관관계(r=0.195)로 나타나, 단순선형 회귀모형을 적합할 수 있음\n+ 독립변수는 연도, 종속변수는 평균기온으로 단순선형 회귀분석을 실시한 결과, 모형의 설명력은 3.8%로 비교적 낮게 나타남\n+ 적합된 회귀식 : $\\hat{y} = -297.85 + 0.16*x$\n  + 연도가 1년 증가할수록 8월 15일의 평균기온은 약 0.16℃ 상승하는 것으로 추정됨\n+ 따라서 2021년 8월 15일의 평균기온은 27.51℃로 예측됨\n\n<br>\n\n<br>\n\n## 8.4. 다중선형 회귀분석\n+ 다중선형 회귀분석\n  + 두 개 이상의 독립변수가 종속변수에 미치는 영향을 분석하는 통계 기법\n    + 예: 공부 시간, 수면 시간, 강의 출석률(독립변수들)에 따른 시험 성적(종속변수)의 변화\n  + 다중선형 회귀모델\n    $$y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + \\cdots + \\beta_p x_p + \\epsilon$$\n    + $\\beta_0$ : 절편(intercept)  \n    + $\\beta_1, \\beta_2, \\dots, \\beta_p$ : 각 독립변수의 기울기(slope)\n    + $\\epsilon$ : 오차(error)\n\n<br>\n\n## 8.5. (실습) 캘리포니아 주택 가격 분석\n+ \\[데이터\\] scikit-learn에서 제공하는 캘리포니아 주택 가격 데이터\n  + 1990년대 캘리포니아 지역의 주택 가격에 대한 데이터\n  + 총 20,640개의 관측값과 8개의 독립변수(feature), 1개의 종속변수(target)으로 구성됨\n  + `as_frame=True` 옵션을 사용하면 독립변수와 종속변수를 DataFrame 형태로 불러올 수 있음\n  + `as_frame=False` 옵션(기본값)을 사용하면 독립변수와 종속변수를 각각 넘파이 배열 형태로 별도로 제공함\n\n<br>\n\n|변수|설명|\n|:------|:------------------------------|\n|MedInc|지역 중위 소득 (10,000 USD)|\n|HouseAge|주택 연식 (건축 후 경과된 연도 수)|\n|AveRooms|가구당 평균 방 개수|\n|AveBedrms|가구당 평균 침실 개수|\n|Population|지역 내 인구 수|\n|AveOccup|가구당 평균 거주 인원 수|\n|Latitude|위도|\n|Longitude|경도|\n|MedHouseVal|주택 중위 가격 (100,000 USD)|\n\n<br>\n\n```{python}\n## (1) 데이터 확인 및 전처리\n```\n\n```{python}\n# 데이터 불러오기\nfrom sklearn.datasets import fetch_california_housing\ndata = fetch_california_housing(as_frame=True)\ndf = data.frame\ndf.head()\n```\n\n```{python}\n# 데이터 정보\ndf.info()\n```\n\n```{python}\n# 데이터 전처리 : 결측값 확인\ndf.isna().sum()\n```\n\n```{python}\n# 데이터 전처리 : 훈련 데이터와 평가 데이터로 분할 (7:3 비율)\ncalifornia = fetch_california_housing()\nX = california.data\ny = california.target\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n```\n\n<br>\n\n```{python}\n## (2) 데이터 분석 및 시각화\n```\n\n```{python}\n#| scrolled: true\n# 요약 통계량 확인\ndf_train = pd.DataFrame(data=X_train, columns=california.feature_names)\ndf_train['MedHouseVal'] = y_train\ndf_train.describe()\n```\n\n```{python}\n# 산점도\nsns.pairplot(df_train, height=10.8, plot_kws={'s': 10}, diag_kind='kde')\nplt.show()\n```\n\n```{python}\n# 상관분석\ncorr_train = df_train.corr()\nupp_mat = np.triu(corr_train)\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(corr_train, annot=True, mask=upp_mat, cmap='BrBG', vmin=-1, vmax=1)\nplt.title('Correlation Matrix')\nplt.show()\n```\n\n```{python}\n# 상관관계가 강한 독립변수 선택\n# scikit-learn에서 입력 데이터(feature)를 2차원 배열로 요구함\nfeatures = ['MedInc', 'HouseAge', 'AveRooms', 'Latitude']\ntarget = 'MedHouseVal'\n\nX_train = df_train[features]\ny_train = df_train[target]\n```\n\n```{python}\n# 평가 데이터에서도 훈련 데이터에서 사용한 독립변수만 선택\ndf_test = pd.DataFrame(data=X_test, columns=california.feature_names)\ndf_test['MedHouseVal'] = y_test\nX_test = df_test[features]\n```\n\n```{python}\n#| scrolled: true\n# 선형 회귀모델 생성 및 학습\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# 회귀모델 평가 : 결정계수, MSE\nfrom sklearn.metrics import mean_squared_error, r2_score\ny_pred = model.predict(X_test)\nR2 = r2_score(y_test, y_pred)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\n\nprint(f\"결정계수 : {R2:.3f}\")\nprint(f\"RMSE : {RMSE:.3f}\")\n```\n\n```{python}\n# 회귀계수\ndf_coef = pd.DataFrame({'Feature': features, 'Coefficient': model.coef_})\nprint(df_coef)\n```\n\n```{python}\n# statsmodels 라이브러리 설치\n#!pip install statsmodels\n```\n\n```{python}\n# [참고] 회귀계수의 유의성\nimport statsmodels.api as sm\n\nX_train_const = sm.add_constant(X_train)\nols_model = sm.OLS(y_train, X_train_const).fit()\nprint(ols_model.summary())\n```\n\n<br>\n\n##### **결과 및 시사점**\n+ 결정계수 $R^2$은 52.0%로 나타남\n+ RMSE는 0.630으로, 주택 중위 가격의 실제값과 예측값이 평균적으로 약 6만 달러 차이가 있다는 것을 의미함\n+ 훈련 데이터에서 주택 중위 가격의 평균은 약 20만 달러인 점을 고려하면, 모델의 평균 오차는 약 30% 수준임을 알 수 있음\n+ 따라서 평균 오차가 비교적 큰 편이므로, 모델 성능 개선이 필요한 것으로 판단됨\n+ 회귀계수를 살펴보면 지역 중위 소득, 주택 연식이 증가할수록 주택 중위 가격은 높아지며, 가구당 평균 거주 인원 수, 위도가 증가할수록 주택 중위 가격은 낮아지는 것으로 나타남\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":2,"output-file":"3_2_regression.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cerulean"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}